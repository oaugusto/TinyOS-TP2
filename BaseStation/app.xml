<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="BaseStationC" loc="78:BaseStationC.nc">
      <documentation loc="43:BaseStationC.nc">
        <short>&#10; The TinyOS 2.x base station that forwards packets between the UART&#10; and radio.It replaces the GenericBase of TinyOS 1.0 and the&#10; TOSBase of TinyOS 1.1.</short>
        <long>&#10; The TinyOS 2.x base station that forwards packets between the UART&#10; and radio.It replaces the GenericBase of TinyOS 1.0 and the&#10; TOSBase of TinyOS 1.1.&#10;&#10; &#60;p>On the serial link, BaseStation sends and receives simple active&#10; messages (not particular radio packets): on the radio link, it&#10; sends radio active messages, whose format depends on the network&#10; stack being used. BaseStation will copy its compiled-in group ID to&#10; messages moving from the serial link to the radio, and will filter&#10; out incoming radio messages that do not contain that group ID.&#60;/p>&#10;&#10; &#60;p>BaseStation includes queues in both directions, with a guarantee&#10; that once a message enters a queue, it will eventually leave on the&#10; other interface. The queues allow the BaseStation to handle load&#10; spikes.&#60;/p>&#10;&#10; &#60;p>BaseStation acknowledges a message arriving over the serial link&#10; only if that message was successfully enqueued for delivery to the&#10; radio link.&#60;/p>&#10;&#10; &#60;p>The LEDS are programmed to toggle as follows:&#60;/p>&#10; &#60;ul>&#10; &#60;li>&#60;b>RED Toggle:&#60;/b>: Message bridged from serial to radio&#60;/li>&#10; &#60;li>&#60;b>GREEN Toggle:&#60;/b> Message bridged from radio to serial&#60;/li>&#10; &#60;li>&#60;b>YELLOW/BLUE Toggle:&#60;/b> Dropped message due to queue overflow in either direction&#60;/li>&#10; &#60;/ul>&#10;&#10; @author Phil Buonadonna&#10; @author Gilman Tolle&#10; @author David Gay&#10; @author Philip Levis&#10; @date August 10 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MainC" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/PlatformC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/PlatformC.nc">
        <short>&#10; The default simulation platform, which does nothing.</short>
        <long>&#10; The default simulation platform, which does nothing.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMoteP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationP" loc="60:BaseStationP.nc" safe="">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/LedsC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/rodrigoct/tinyos-main-master/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/rodrigoct/tinyos-main-master/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/rodrigoct/tinyos-main-master/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/rodrigoct/tinyos-main-master/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformP" loc="42:/home/rodrigoct/tinyos-main-master/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/rodrigoct/tinyos-main-master/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="45:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SerialActiveMessageC.nc">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ff8d1ea5d30" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ff8d1ea2110" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ff8d1ea24a0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ff8d1ea27f0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ff8d1e13020" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ff8d1e133b0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ff8d1e13740" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7ff8d1e13a90" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7ff8d1eb2790" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7ff8d1eb2b00" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7ff8d1eb2e70" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7ff8d22884e0" loc="113:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ff8d2288260" loc="113:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7ff8d2287ab0" loc="138:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ff8d2287830" loc="138:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ff8d2289860" loc="104:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff8d2288d30" loc="130:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/rodrigoct/tinyos-main-master/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/rodrigoct/tinyos-main-master/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ff8d233cd50" loc="60:/home/rodrigoct/tinyos-main-master/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/rodrigoct/tinyos-main-master/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7ff8d2670c50" loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7ff8d25dd4f0" loc="75:/home/rodrigoct/tinyos-main-master/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/rodrigoct/tinyos-main-master/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0x7ff8d224c490" loc="45:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7ff8d3471950"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d224c210" loc="45:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ff8d2278b00" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d2278880" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7ff8d2273ba0" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d2273920" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ff8d226f020" loc="126:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d2270910" loc="126:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8d2270c40" loc="126:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ff8d2270020" loc="106:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7ff8d2274050" loc="94:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d2272a70" loc="94:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8d2272da0" loc="94:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff8d2285c90" loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ff8d2285340" loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ff8d22856c0" loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8d22859f0" loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ff8d227e620" loc="135:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d227e020" loc="135:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8d227e350" loc="135:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ff8d227f6d0" loc="123:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff8d22832a0" loc="96:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d2283020" loc="96:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff8d22817f0" loc="110:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d2281210" loc="110:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ff8d2281560" loc="110:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7ff8d20ab940" loc="49:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8d20ab940"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7ff8d20a8270" loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
        <documentation loc="50:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7ff8d20a7020" loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
        <documentation loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8d20ab940"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7ff8d20a89f0" loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7ff8d20a8d10" loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8d20ab940"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7ff8d1fc4b30" loc="50:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7ff8d1fc2ab0" loc="60:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7ff8d1fc2350" loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ff8d2473bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7ff8d1fc42f0" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff8d2473bd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7ff8d1fc7cb0" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff8d2473bd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7ff8d1fc4060" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/rodrigoct/tinyos-main-master/tos/interfaces/Init.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ff8d2338270" loc="62:/home/rodrigoct/tinyos-main-master/tos/interfaces/Init.nc">
        <documentation loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/rodrigoct/tinyos-main-master/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7ff8d227ab70" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/rodrigoct/tinyos-main-master/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
              <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d227a210" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7ff8d227a560" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8d227a890" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x7ff8d22e4c00" loc="44:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x7ff8d22e4980" loc="44:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x7ff8d22e2ba0" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x7ff8d347ea30"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x7ff8d22e2240" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x7ff8d22e25a0" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8d22e2900" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x7ff8d347ea30"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x7ff8d22e0970" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7ff8d22e0270" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x7ff8d22e4270" loc="43:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRadioChannel" ref="0x7ff8d22df430" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newRadioChannel" ref="0x7ff8d22df1b0" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7ff8d22e3af0" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRadioChannel" ref="0x7ff8d22dfbd0" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x7ff8d22e33e0" loc="45:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7ff8d1f97190" loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7ff8d1f97940" loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7ff8d1f96190" loc="72:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7ff8d1f95120" loc="83:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7ff8d1f93890" loc="100:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff8d1f920e0" loc="117:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7ff8d1f96920" loc="77:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff8d1f92c50" loc="134:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7ff8d1f929d0" loc="134:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7ff8d1f989d0" loc="56:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7ff8d1f95900" loc="89:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7ff8d1f930e0" loc="94:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ff8d1f34730" loc="44:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ff8d1f34e60" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ff8d1f358e0" loc="42:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ff8d1f33cf0" loc="47:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff8d1f34020" loc="43:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ff8d1f335b0" loc="46:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff8d1f38aa0" loc="40:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ff8d1f351f0" loc="41:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7ff8d225a770" loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d225a4f0" loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7ff8d2258940" loc="71:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d22586c0" loc="71:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7ff8d2257ab0" loc="85:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d2257830" loc="85:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0x7ff8d21d0020" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x7ff8d278f1c0"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7ff8d21d4ad0" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x7ff8d21d4e70" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7ff8d21d11d0" loc="50:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x7ff8d21d1570" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x7ff8d278f1c0"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x7ff8d21d1880" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x7ff8d21d1bd0" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7ff8d21cdc00" loc="60:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d21cd980" loc="60:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x7ff8d21ce0e0" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x7ff8d21ce830" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x7ff8d21d0940" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7ff8d21d06c0" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x7ff8d21cd2a0" loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d21cd020" loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x7ff8d21cc5f0" loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d21cc370" loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff8d224a2c0" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7ff8d224e830" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x7ff8d224ebb0" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8d224a020" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7ff8d2247aa0" loc="85:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d2247820" loc="85:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff8d2249020" loc="69:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d224ac20" loc="69:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff8d2247020" loc="76:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d2249920" loc="76:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ff8d2249c70" loc="76:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x7ff8d2246550" loc="87:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8d22462d0" loc="87:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7ff8d225f9f0" loc="177:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ff8d2473bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8d225f770" loc="177:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7ff8d226a600" loc="88:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8d226a380" loc="88:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7ff8d22769f0" loc="68:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7ff8d226b520" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8d226b2a0" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7ff8d2267020" loc="121:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8d2266950" loc="121:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7ff8d2266ca0" loc="121:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7ff8d2268a30" loc="103:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8d2268450" loc="103:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7ff8d22687a0" loc="103:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7ff8d22634a0" loc="147:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff8d24737f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8d2263220" loc="147:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7ff8d2262850" loc="162:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ff8d24737f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8d22622a0" loc="162:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7ff8d22625c0" loc="162:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ff8d24737f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7ff8d22652a0" loc="136:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8d2265020" loc="136:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7ff8d2260020" loc="187:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff8d2473bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8d225e8c0" loc="187:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7ff8d225ec10" loc="187:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff8d2473bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7ff8d2260e40" loc="195:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ff8d2473bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ff8d2484cc0" loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7ff8d2a9fca0" loc="72:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7ff8d2a9f490" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <enum name="cc2420_rxctrl1_enums" loc="304:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22f9c10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd" loc="9:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7ff8d3479110" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x7ff8d34795a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x7ff8d3479650" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <union loc="156:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2a9a080" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x7ff8d2a9a290" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7ff8d2a9a340" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="132:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7ff8d23436b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="141:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2a9d530" defined="" size="I:48" alignment="I:8">
      <field name="__lock" ref="0x7ff8d2a9d740" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__futex" ref="0x7ff8d2a9d7f0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__total_seq" ref="0x7ff8d2a9d8a0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__wakeup_seq" ref="0x7ff8d2a9d950" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__woken_seq" ref="0x7ff8d2a9da00" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__mutex" ref="0x7ff8d2a9dab0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__nwaiters" ref="0x7ff8d2a9db60" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__broadcast_seq" ref="0x7ff8d2a9dc10" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_log.c" ref="0x7ff8d275a6c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="itimerspec" loc="161:/usr/include/time.h" ref="0x7ff8d257adf0" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x7ff8d2579530" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x7ff8d2ab5460"/></type-tag>
      </field>
      <field name="it_value" ref="0x7ff8d25795e0" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x7ff8d2ab5460"/></type-tag>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="24:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimRadioMsg.h" ref="0x7ff8d246ea10" defined="" size="I:7" alignment="I:1">
      <field name="strength" ref="0x7ff8d246c8b0" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x7ff8d2b5d2d0"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x7ff8d246c960" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="tx_power" ref="0x7ff8d246ca10" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="crc" ref="0x7ff8d246cac0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x7ff8d246cb70" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x7ff8d246cc20" bit-offset="I:40" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7ff8d2b5a740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct name="cc2420_metadata_t" loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d231f510" defined="" size="I:12" alignment="I:1">
      <field name="rssi" ref="0x7ff8d231d780" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x7ff8d231d830" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="tx_power" ref="0x7ff8d231d8e0" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="crc" ref="0x7ff8d231d990" bit-offset="I:24" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x7ff8d2b5d2d0"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x7ff8d231da40" bit-offset="I:32" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x7ff8d2b5d2d0"/></typename>
        </type-int>
      </field>
      <field name="timesync" ref="0x7ff8d231daf0" bit-offset="I:40" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x7ff8d2b5d2d0"/></typename>
        </type-int>
      </field>
      <field name="timestamp" ref="0x7ff8d231dba0" bit-offset="I:48" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x7ff8d2b5ae60"/></typename>
        </type-int>
      </field>
      <field name="rxInterval" ref="0x7ff8d231dc50" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7ff8d2b5a740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="gain_entry" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_gain.h" ref="0x7ff8d25f4510" defined="" size="I:24" alignment="I:8">
      <field name="mote" ref="0x7ff8d25f4d20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x7ff8d25f4dd0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x7ff8d25f4e80" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x7ff8d25f4510"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="26:/home/rodrigoct/tinyos-main-master/tos/types/AM.h" ref="0x7ff8d2471850" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="94:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h" ref="0x7ff8d246be90" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_gain_noise" loc="3:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_gain.c" ref="0x7ff8d25e89a0" defined="" size="I:16" alignment="I:8">
      <field name="mean" ref="0x7ff8d25e7020" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x7ff8d25e70d0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x7ff8d3480a20" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="30:/usr/include/x86_64-linux-gnu/bits/time.h" ref="0x7ff8d2ab5e20" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x7ff8d2ab44a0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__time_t" ref="0x7ff8d2af5960"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x7ff8d2ab4550" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__suseconds_t" ref="0x7ff8d2af4160"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="21:/usr/include/_G_config.h" ref="0x7ff8d2833eb0" defined="" size="I:16" alignment="I:8">
      <field name="__pos" ref="0x7ff8d28320e0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off_t" ref="0x7ff8d2af8560"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x7ff8d2832190" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7ff8d2833350"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x7ff8d2833770"/></typename>
        </type-tag>
      </field>
    </struct>
    <union loc="245:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2a92960" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x7ff8d2a92b70" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7ff8d2a92c20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="46:/usr/include/ctype.h" ref="0x7ff8d28675d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nonnull" loc="8:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7ff8d347a620" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x7ff8d347aa90" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="27:/usr/include/x86_64-linux-gnu/bits/sigset.h" ref="0x7ff8d2ab68b0" defined="" size="I:128" alignment="I:8">
      <field name="__val" ref="0x7ff8d2ab6ac0" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="number"  loc="NONE" ref="0x7ff8d3481020" size="V:" alignment="V:">
    </attribute>
    <enum loc="51:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h" ref="0x7ff8d347cde0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="82:/usr/include/wchar.h" ref="0x7ff8d2833350" defined="" size="I:8" alignment="I:4">
      <field name="__count" ref="0x7ff8d2833560" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__value" ref="0x7ff8d2833610" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><union-ref ref="0x7ff8d2834da0"/></type-tag>
      </field>
    </struct>
    <struct loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7ff8d23479b0" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x7ff8d2347bc0" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x7ff8d2347c70" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x7ff8d2347d20" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="144:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7ff8d2342a00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_txctrl_enums" loc="284:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22fdcc0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="50:/usr/include/x86_64-linux-gnu/bits/waitflags.h" ref="0x7ff8d2b03020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="134:/usr/include/x86_64-linux-gnu/bits/types.h" ref="0x7ff8d2af7290" defined="" size="I:8" alignment="I:4">
      <field name="__val" ref="0x7ff8d2af74a0" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="node" loc="62:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/heap.c" ref="0x7ff8d26ebd40" defined="" size="I:16" alignment="I:8">
      <field name="data" ref="0x7ff8d26ea380" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x7ff8d26ea430" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum name="cc2420_rssi_enums" loc="275:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22feb20" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_secctrl0_enums" loc="326:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22f43b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_secctrl1_enums" loc="336:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22f23b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="security_header_t" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d2323760" defined="" size="I:6" alignment="I:1">
      <field name="secLevel" ref="0x7ff8d2322880" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="keyMode" ref="0x7ff8d2322930" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x7ff8d23229e0" bit-offset="I:5" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="frameCounter" ref="0x7ff8d2322a90" bit-offset="I:8" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x7ff8d2b5ae60"/></typename>
        </type-int>
      </field>
      <field name="keyID" ref="0x7ff8d2322b40" bit-offset="I:40" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="serial_packet" loc="131:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h" ref="0x7ff8d2463640" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x7ff8d2463d50" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x7ff8d2464190"/>
          <typename><typedef-ref name="serial_header_t" ref="0x7ff8d24632e0"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x7ff8d2463e00" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="43:/home/rodrigoct/tinyos-main-master/tos/types/Leds.h" ref="0x7ff8d1f9d990" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="integer"  loc="NONE" ref="0x7ff8d3484cf0" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="99:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/tos.h" ref="0x7ff8d2766aa0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct loc="26:/usr/include/_G_config.h" ref="0x7ff8d2832a10" defined="" size="I:16" alignment="I:8">
      <field name="__pos" ref="0x7ff8d2832c20" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x7ff8d2af8920"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x7ff8d2832cd0" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7ff8d2833350"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x7ff8d2833770"/></typename>
        </type-tag>
      </field>
    </struct>
    <union name="message_footer" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/platform_message.h" ref="0x7ff8d2461a40" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x7ff8d2461f40" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x7ff8d246e080"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x7ff8d246e6a0"/></typename>
        </type-tag>
      </field>
    </union>
    <union name="message_metadata" loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/platform_message.h" ref="0x7ff8d245f450" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0x7ff8d245f970" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x7ff8d246ea10"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x7ff8d246cd80"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0x7ff8d3480340" size="V:" alignment="V:">
      <field name="fn" ref="0x7ff8d3480550" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="drand48_data" loc="412:/usr/include/stdlib.h" ref="0x7ff8d2a785d0" defined="" size="I:24" alignment="I:8">
      <field name="__x" ref="0x7ff8d2a774a0" bit-offset="I:0" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__old_x" ref="0x7ff8d2a77550" bit-offset="I:48" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__c" ref="0x7ff8d2a77600" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__init" ref="0x7ff8d2a776b0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__a" ref="0x7ff8d2a77760" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum name="cc2420_nonce_enums" loc="239:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d2305c00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__locale_struct" loc="27:/usr/include/xlocale.h" ref="0x7ff8d2b3a5f0" defined="" size="I:232" alignment="I:8">
      <field name="__locales" ref="0x7ff8d2b39a50" bit-offset="I:0" size="I:104">
        <type-array elements="I:13" size="I:104" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="V:" alignment="V:"><struct-ref name="__locale_data" ref="0x7ff8d2b3a890"/></type-tag>
          </type-pointer>
        </type-array>
      </field>
      <field name="__ctype_b" ref="0x7ff8d2b39b00" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_tolower" ref="0x7ff8d2b39bb0" bit-offset="I:896" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_toupper" ref="0x7ff8d2b39c60" bit-offset="I:960" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__names" ref="0x7ff8d2b39d10" bit-offset="I:1024" size="I:104">
        <type-array elements="I:13" size="I:104" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </type-array>
      </field>
    </struct>
    <struct name="lqi_dist" loc="4:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h" ref="0x7ff8d215b930" defined="" size="I:16" alignment="I:8">
      <field name="lqi" ref="0x7ff8d215bee0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="cdf" ref="0x7ff8d2158020" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <nx_struct name="serial_header" loc="123:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h" ref="0x7ff8d2464190" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x7ff8d2464e10" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x7ff8d2473430"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x7ff8d2464ec0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x7ff8d2473430"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x7ff8d2463020" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x7ff8d24630d0" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x7ff8d2473020"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x7ff8d2463180" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x7ff8d24749d0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="69:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x7ff8d2ae6620" defined="" size="I:4" alignment="I:4">
      <field name="__w_termsig" ref="0x7ff8d2ae6830" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_coredump" ref="0x7ff8d2ae68e0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_retcode" ref="0x7ff8d2ae6990" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="message_header" loc="50:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/platform_message.h" ref="0x7ff8d2462d70" defined="" size="I:11" alignment="I:1">
      <field name="tossim" ref="0x7ff8d24614d0" bit-offset="I:0" size="I:11">
        <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x7ff8d24703c0"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x7ff8d246fca0"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x7ff8d2461580" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x7ff8d2464190"/>
          <typename><typedef-ref name="serial_header_t" ref="0x7ff8d24632e0"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="timespec" loc="120:/usr/include/time.h" ref="0x7ff8d2ab5460" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x7ff8d2ab5ab0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__time_t" ref="0x7ff8d2af5960"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x7ff8d2ab5b60" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__syscall_slong_t" ref="0x7ff8d2aef930"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7ff8d3477890" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x7ff8d3477bd0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__pthread_internal_list" loc="75:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2aa4280" defined="" size="I:16" alignment="I:8">
      <field name="__prev" ref="0x7ff8d2aa4b80" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x7ff8d2aa4280"/></type-tag>
        </type-pointer>
      </field>
      <field name="__next" ref="0x7ff8d2aa4c30" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x7ff8d2aa4280"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum name="cc2420_manfidh_enums" loc="367:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22ed220" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd_nok" loc="10:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7ff8d3479ca0" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x7ff8d34771a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x7ff8d3477250" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <nx_struct name="cc2420_packet_t" loc="111:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d231c300" defined="" size="I:12" alignment="I:1">
      <field name="packet" ref="0x7ff8d231ca10" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7ff8d2321080"/>
          <typename><typedef-ref name="cc2420_header_t" ref="0x7ff8d23209e0"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x7ff8d231cac0" bit-offset="I:96" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="timezone" loc="55:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x7ff8d26879d0" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x7ff8d2685020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x7ff8d26850d0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="wait" loc="66:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x7ff8d2ae7710" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x7ff8d2ae5b00" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wait_terminated" ref="0x7ff8d2ae5bb0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7ff8d2ae6620"/></type-tag>
      </field>
      <field name="__wait_stopped" ref="0x7ff8d2ae5c60" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7ff8d2ae5510"/></type-tag>
      </field>
    </union>
    <struct name="sim_event" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_event_queue.h" ref="0x7ff8d2783020" defined="" size="I:48" alignment="I:8">
      <field name="time" ref="0x7ff8d27810a0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x7ff8d278f1c0"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x7ff8d2781150" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="force" ref="0x7ff8d2781200" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x7ff8d27812b0" bit-offset="I:136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x7ff8d2781360" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x7ff8d2781410" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7ff8d2783020"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x7ff8d2783410"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x7ff8d27814e0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7ff8d2783020"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x7ff8d2783410"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="_IO_jump_t" ref="0x7ff8d282f730" size="V:" alignment="V:">
    </struct>
    <enum loc="102:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h" ref="0x7ff8d2469880" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="64:/usr/include/x86_64-linux-gnu/sys/select.h" ref="0x7ff8d2ab28f0" defined="" size="I:128" alignment="I:8">
      <field name="__fds_bits" ref="0x7ff8d2ab2b00" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-int cname="long" size="I:8" alignment="I:8">
            <typename><typedef-ref name="__fd_mask" ref="0x7ff8d2ab4c70"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7ff8d2350080" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="tossim_footer" loc="20:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimRadioMsg.h" ref="0x7ff8d246e080" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x7ff8d246e540" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7ff8d2b541f0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__codecvt_result" loc="176:/usr/include/libio.h" ref="0x7ff8d282dd10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_packet.h" ref="0x7ff8d24855d0" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum name="cc2420_iocfg0_enums" loc="347:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22f1d90" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="347:/usr/include/math.h" ref="0x7ff8d286b020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_rsctrl_enums" loc="317:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22f6790" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="401:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22e7020" defined="" size="I:4" alignment="I:4">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_metadata" loc="136:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h" ref="0x7ff8d2462400" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x7ff8d24628b0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__itimer_which" loc="91:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x7ff8d2681d50" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atmostonce" loc="97:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/tos.h" ref="0x7ff8d27663a0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union loc="174:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2a96a10" defined="" size="I:56" alignment="I:8">
      <field name="__data" ref="0x7ff8d2a96c20" bit-offset="I:0" size="I:56">
        <type-tag size="I:56" alignment="I:8"><struct-ref ref="0x7ff8d2a97900"/></type-tag>
      </field>
      <field name="__size" ref="0x7ff8d2a96cd0" bit-offset="I:0" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7ff8d2a96d80" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <enum name="cc2420_status_enums" loc="164:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d2316aa0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="hwevent"  loc="NONE" ref="0x7ff8d3481a90" size="V:" alignment="V:">
    </attribute>
    <enum name="cc2420_ram_addr_enums" loc="225:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d2308e00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_battmon_enums" loc="341:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22f2e70" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_FILE" loc="241:/usr/include/libio.h" ref="0x7ff8d28367f0" defined="" size="I:216" alignment="I:8">
      <field name="_flags" ref="0x7ff8d2826240" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_IO_read_ptr" ref="0x7ff8d28262f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_end" ref="0x7ff8d28263a0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_base" ref="0x7ff8d2826450" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_base" ref="0x7ff8d2826500" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_ptr" ref="0x7ff8d28265b0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_end" ref="0x7ff8d2826660" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_base" ref="0x7ff8d2826710" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_end" ref="0x7ff8d28267c0" bit-offset="I:512" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_base" ref="0x7ff8d2826870" bit-offset="I:576" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_backup_base" ref="0x7ff8d2826920" bit-offset="I:640" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_end" ref="0x7ff8d28269d0" bit-offset="I:704" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_markers" ref="0x7ff8d2826a80" bit-offset="I:768" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="_IO_marker" ref="0x7ff8d282d020"/></type-tag>
        </type-pointer>
      </field>
      <field name="_chain" ref="0x7ff8d2826c30" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7ff8d28367f0"/></type-tag>
        </type-pointer>
      </field>
      <field name="_fileno" ref="0x7ff8d2826ce0" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags2" ref="0x7ff8d2826d90" bit-offset="I:928" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_old_offset" ref="0x7ff8d2826e40" bit-offset="I:960" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off_t" ref="0x7ff8d2af8560"/></typename>
        </type-int>
      </field>
      <field name="_cur_column" ref="0x7ff8d2826ef0" bit-offset="I:1024" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_vtable_offset" ref="0x7ff8d2824020" bit-offset="I:1040" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="_shortbuf" ref="0x7ff8d28240d0" bit-offset="I:1048" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lock" ref="0x7ff8d2824180" bit-offset="I:1088" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1">
            <typename><typedef-ref name="_IO_lock_t" ref="0x7ff8d282fbc0"/></typename>
          </type-void>
        </type-pointer>
      </field>
      <field name="_offset" ref="0x7ff8d2824230" bit-offset="I:1152" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x7ff8d2af8920"/></typename>
        </type-int>
      </field>
      <field name="__pad1" ref="0x7ff8d28242e0" bit-offset="I:1216" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad2" ref="0x7ff8d2824390" bit-offset="I:1280" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad3" ref="0x7ff8d2824440" bit-offset="I:1344" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad4" ref="0x7ff8d28246f0" bit-offset="I:1408" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad5" ref="0x7ff8d28247a0" bit-offset="I:1472" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x7ff8d347ea30"/></typename>
        </type-int>
      </field>
      <field name="_mode" ref="0x7ff8d2824850" bit-offset="I:1536" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_unused2" ref="0x7ff8d2824900" bit-offset="I:1568" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <union name="pthread_attr_t" loc="63:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2aa5360" defined="" size="I:56" alignment="I:8">
      <field name="__size" ref="0x7ff8d2aa5a00" bit-offset="I:0" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7ff8d2aa5ab0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct name="hashtable" ref="0x7ff8d2764080" size="V:" alignment="V:">
    </struct>
    <enum loc="25:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h" ref="0x7ff8d23f5e70" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="heap" loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/heap.h" ref="0x7ff8d26f3be0" defined="" size="I:24" alignment="I:8">
      <field name="size" ref="0x7ff8d26f2360" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x7ff8d26f2410" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x7ff8d26f24c0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum name="cc2420_syncword_enums" loc="280:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22fd5d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="safe"  loc="NONE" ref="0x7ff8d3480ce0" size="V:" alignment="V:">
    </attribute>
    <enum loc="87:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h" ref="0x7ff8d246b4e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="76:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/tos.h" ref="0x7ff8d27912f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_marker" loc="156:/usr/include/libio.h" ref="0x7ff8d282d020" defined="" size="I:24" alignment="I:8">
      <field name="_next" ref="0x7ff8d282d910" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="_IO_marker" ref="0x7ff8d282d020"/></type-tag>
        </type-pointer>
      </field>
      <field name="_sbuf" ref="0x7ff8d282d9c0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7ff8d28367f0"/></type-tag>
        </type-pointer>
      </field>
      <field name="_pos" ref="0x7ff8d282da70" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="126:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7ff8d2344c40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="150:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7ff8d2340590" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x7ff8d23407a0" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x7ff8d2340850" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x7ff8d2340900" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x7ff8d23409b0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x7ff8d2340a60" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x7ff8d2340b10" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="85:/usr/include/wchar.h" ref="0x7ff8d2834da0" defined="" size="I:4" alignment="I:4">
      <field name="__wch" ref="0x7ff8d2833020" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wchb" ref="0x7ff8d28330d0" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </union>
    <enum loc="144:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d231a020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="random_data" loc="343:/usr/include/stdlib.h" ref="0x7ff8d2a8d830" defined="" size="I:48" alignment="I:8">
      <field name="fptr" ref="0x7ff8d2a8c7c0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x7ff8d33e61a0"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rptr" ref="0x7ff8d2a8c870" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x7ff8d33e61a0"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="state" ref="0x7ff8d2a8c920" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x7ff8d33e61a0"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rand_type" ref="0x7ff8d2a8c9d0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_deg" ref="0x7ff8d2a8ca80" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_sep" ref="0x7ff8d2a8cb30" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="end_ptr" ref="0x7ff8d2a8cbe0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x7ff8d33e61a0"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <enum loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7ff8d234fb00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="126:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128hardware.h" ref="0x7ff8d23526b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="120:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7ff8d2344300" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="tm" loc="133:/usr/include/time.h" ref="0x7ff8d257b020" defined="" size="I:56" alignment="I:8">
      <field name="tm_sec" ref="0x7ff8d257a470" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x7ff8d257a520" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x7ff8d257a5d0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x7ff8d257a680" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x7ff8d257a730" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x7ff8d257a7e0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x7ff8d257a890" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x7ff8d257a940" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x7ff8d257a9f0" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x7ff8d257aaa0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="tm_zone" ref="0x7ff8d257ab50" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_log.c" ref="0x7ff8d275ad90" defined="" size="I:16" alignment="I:8">
      <field name="num" ref="0x7ff8d2759440" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x7ff8d27594f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7ff8d28367f0"/>
              <typename><typedef-ref name="FILE" ref="0x7ff8d2836be0"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="104:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7ff8d2346130" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="radio_stats" loc="109:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h" ref="0x7ff8d2468b50" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x7ff8d24665c0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x7ff8d2466670" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x7ff8d2466720" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x7ff8d24667d0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x7ff8d2466880" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff8d33e6d20"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x7ff8d2466930" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff8d33e6d20"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x7ff8d24669e0" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff8d33e6d20"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x7ff8d2466a90" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff8d33e6d20"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x7ff8d2466b40" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff8d33e6d20"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x7ff8d2466bf0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff8d33e6d20"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x7ff8d2466ca0" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff8d33e6d20"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="one_nok" loc="14:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7ff8d3475670" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x7ff8d34759e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="dmemset" loc="15:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7ff8d3474080" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x7ff8d3474550" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x7ff8d3474600" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x7ff8d34746b0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="atleastonce" loc="98:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/tos.h" ref="0x7ff8d2766720" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct ref="0x7ff8d3486530" size="V:" alignment="V:">
    </struct>
    <struct name="itimerval" loc="107:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x7ff8d2680b00" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x7ff8d267f260" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x7ff8d2ab5e20"/></type-tag>
      </field>
      <field name="it_value" ref="0x7ff8d267f310" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x7ff8d2ab5e20"/></type-tag>
      </field>
    </struct>
    <nx_struct name="cc2420_header_t" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d2321080" defined="" size="I:12" alignment="I:1">
      <field name="length" ref="0x7ff8d23203b0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7ff8d2b55a50"/></typename>
        </type-int>
      </field>
      <field name="fcf" ref="0x7ff8d2320460" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7ff8d2b541f0"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x7ff8d2320510" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7ff8d2b55a50"/></typename>
        </type-int>
      </field>
      <field name="destpan" ref="0x7ff8d23205c0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7ff8d2b541f0"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x7ff8d2320670" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7ff8d2b541f0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x7ff8d2320720" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7ff8d2b541f0"/></typename>
        </type-int>
      </field>
      <field name="network" ref="0x7ff8d23207d0" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7ff8d2b55a50"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x7ff8d2320880" bit-offset="I:88" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7ff8d2b55a50"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="97:/usr/include/stdlib.h" ref="0x7ff8d2add020" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x7ff8d2add230" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x7ff8d2add2e0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7ff8d34762d0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x7ff8d3476610" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum name="cc2420_rxctrl0_enums" loc="294:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22fbbb0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sigevent" ref="0x7ff8d2579810" size="V:" alignment="V:">
    </struct>
    <union loc="67:/usr/include/stdlib.h" ref="0x7ff8d2ae4390" defined="" size="I:8" alignment="I:8">
      <field name="__uptr" ref="0x7ff8d2ae45a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:4" alignment="I:4"><union-ref name="wait" ref="0x7ff8d2ae7710"/></type-tag>
        </type-pointer>
      </field>
      <field name="__iptr" ref="0x7ff8d2ae4650" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-pointer>
      </field>
    </union>
    <union loc="90:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2aa2e50" defined="" size="I:40" alignment="I:8">
      <field name="__data" ref="0x7ff8d2aa00a0" bit-offset="I:0" size="I:40">
        <type-tag size="I:40" alignment="I:8"><struct-ref name="__pthread_mutex_s" ref="0x7ff8d2aa31d0"/></type-tag>
      </field>
      <field name="__size" ref="0x7ff8d2aa0150" bit-offset="I:0" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7ff8d2aa0200" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <enum name="cc2420_security_enums" loc="385:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22ebea0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="one" loc="13:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7ff8d3476c30" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x7ff8d3475020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="63:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_log.c" ref="0x7ff8d2758a10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7ff8d234f140" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="138:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7ff8d23420a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_fsmtc_enums" loc="372:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22edcb0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__locale_data" ref="0x7ff8d2b3a890" size="V:" alignment="V:">
    </struct>
    <attribute name="spontaneous"  loc="NONE" ref="0x7ff8d3480080" size="V:" alignment="V:">
    </attribute>
    <struct name="snr_lqi" loc="9:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h" ref="0x7ff8d2158570" defined="" size="I:24" alignment="I:8">
      <field name="snr" ref="0x7ff8d2158d40" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="numLqi" ref="0x7ff8d2158df0" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x7ff8d2158ea0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
            <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <union loc="239:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2a93ce0" defined="" size="I:32" alignment="I:8">
      <field name="__size" ref="0x7ff8d2a93ef0" bit-offset="I:0" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7ff8d2a92020" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <union loc="139:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2a9b3c0" defined="" size="I:48" alignment="I:8">
      <field name="__data" ref="0x7ff8d2a9b5d0" bit-offset="I:0" size="I:48">
        <type-tag size="I:48" alignment="I:8"><struct-ref ref="0x7ff8d2a9d530"/></type-tag>
      </field>
      <field name="__size" ref="0x7ff8d2a9b680" bit-offset="I:0" size="I:48">
        <type-array elements="I:48" size="I:48" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7ff8d2a9b730" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <attribute name="unsafe"  loc="NONE" ref="0x7ff8d347e020" size="V:" alignment="V:">
    </attribute>
    <struct loc="84:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x7ff8d2ae5510" defined="" size="I:4" alignment="I:4">
      <field name="__w_stopval" ref="0x7ff8d2ae5720" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_stopsig" ref="0x7ff8d2ae57d0" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="130:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2aa0b20" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x7ff8d2aa0d30" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7ff8d2aa0de0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <nx_struct name="cc2420_footer_t" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d2320da0" defined="" size="I:0" alignment="I:1">
    </nx_struct>
    <struct loc="105:/usr/include/stdlib.h" ref="0x7ff8d2addac0" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x7ff8d2addcd0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x7ff8d2addd80" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="673:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h" ref="0x7ff8d23d1020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_mdmctrl0_enums" loc="256:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d2302d90" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="209:/usr/include/math.h" ref="0x7ff8d286dae0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_mdmctrl1_enums" loc="267:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22ff3b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nts" loc="17:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7ff8d3473980" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x7ff8d3473cf0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="_IO_FILE_plus" ref="0x7ff8d2822020" size="V:" alignment="V:">
    </struct>
    <struct name="exception" loc="372:/usr/include/math.h" ref="0x7ff8d286aa20" defined="" size="I:40" alignment="I:8">
      <field name="type" ref="0x7ff8d2869410" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x7ff8d28694c0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x7ff8d2869570" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x7ff8d2869620" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x7ff8d28696d0" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct loc="177:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2a97900" defined="" size="I:56" alignment="I:8">
      <field name="__lock" ref="0x7ff8d2a97b10" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers" ref="0x7ff8d2a97bc0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__readers_wakeup" ref="0x7ff8d2a97c70" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer_wakeup" ref="0x7ff8d2a97d20" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers_queued" ref="0x7ff8d2a97dd0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_writers_queued" ref="0x7ff8d2a97e80" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer" ref="0x7ff8d2a97f30" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__shared" ref="0x7ff8d2a96020" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__rwelision" ref="0x7ff8d2a960d0" bit-offset="I:256" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__pad1" ref="0x7ff8d2a96180" bit-offset="I:264" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__pad2" ref="0x7ff8d2a96230" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__flags" ref="0x7ff8d2a962e0" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="271:/usr/include/inttypes.h" ref="0x7ff8d33dc8e0" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x7ff8d33dcaf0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x7ff8d33dcba0" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct loc="117:/usr/include/stdlib.h" ref="0x7ff8d2adc770" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x7ff8d2adc980" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x7ff8d2adca30" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="sim_log_channel" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_log.c" ref="0x7ff8d27599c0" defined="" size="I:24" alignment="I:8">
      <field name="name" ref="0x7ff8d2758450" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x7ff8d2758500" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x7ff8d27585b0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x7ff8d2758660" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7ff8d28367f0"/>
              <typename><typedef-ref name="FILE" ref="0x7ff8d2836be0"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <attribute name="C"  loc="NONE" ref="0x7ff8d34817d0" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h" ref="0x7ff8d2674830" defined="" size="I:488" alignment="I:8">
      <field name="key" ref="0x7ff8d26737c0" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x7ff8d2673870" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x7ff8d2673920" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x7ff8d26739d0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x7ff8d2673a80" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x7ff8d2673b30" bit-offset="I:352" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <enum loc="14:/home/rodrigoct/tinyos-main-master/tos/types/AM.h" ref="0x7ff8d2471270" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_main_enums" loc="247:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d2303380" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="macro"  loc="NONE" ref="0x7ff8d34806b0" size="V:" alignment="V:">
      <field name="macro_name" ref="0x7ff8d34808c0" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <enum name="cc2420_enums" loc="155:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d2318c30" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="54:/home/rodrigoct/tinyos-main-master/tos/platforms/micaz/sim/platform_hardware.h" ref="0x7ff8d233f760" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_sfdmux_enums" loc="380:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22eb3e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="224:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2a95830" defined="" size="I:8" alignment="I:8">
      <field name="__size" ref="0x7ff8d2a95e40" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7ff8d2a95ef0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <nx_struct name="message_t" loc="14:/home/rodrigoct/tinyos-main-master/tos/types/message.h" ref="0x7ff8d245fe00" defined="" size="I:48" alignment="I:1">
      <field name="header" ref="0x7ff8d245d0e0" bit-offset="I:0" size="I:11">
        <type-array elements="I:11" size="I:11" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x7ff8d245d190" bit-offset="I:88" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x7ff8d245d240" bit-offset="I:312" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x7ff8d245d2f0" bit-offset="I:328" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="tossim_header" loc="6:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimRadioMsg.h" ref="0x7ff8d24703c0" defined="" size="I:11" alignment="I:1">
      <field name="length" ref="0x7ff8d246f670" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="fcf" ref="0x7ff8d246f720" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7ff8d2b5a740"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x7ff8d246f7d0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x7ff8d246f880" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x7ff8d2473430"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x7ff8d246f930" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x7ff8d2473430"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x7ff8d246f9e0" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x7ff8d2473020"/></typename>
        </type-int>
      </field>
      <field name="network" ref="0x7ff8d246fa90" bit-offset="I:72" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7ff8d2b55a50"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x7ff8d246fb40" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x7ff8d24749d0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="cc2420_config_reg_enums" loc="173:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d2313020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_noise_node_t" loc="73:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h" ref="0x7ff8d2671170" defined="" size="I:264" alignment="I:8">
      <field name="key" ref="0x7ff8d266fb90" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </type-array>
      </field>
      <field name="freqKey" ref="0x7ff8d266fc40" bit-offset="I:1024" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x7ff8d266fcf0" bit-offset="I:1184" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="noiseGenTime" ref="0x7ff8d266fda0" bit-offset="I:1312" size="I:64">
        <type-array elements="I:16" size="I:64" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8d33e5130"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="noiseTable" ref="0x7ff8d266fe50" bit-offset="I:1856" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x7ff8d2764080"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x7ff8d266ff00" bit-offset="I:1920" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x7ff8d266d020" bit-offset="I:1984" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7ff8d33e5130"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x7ff8d266d0d0" bit-offset="I:2016" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7ff8d33e5130"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x7ff8d266d180" bit-offset="I:2048" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum name="cc2420_manfidl_enums" loc="362:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22ee750" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_iocfg1_enums" loc="356:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h" ref="0x7ff8d22ef880" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h" ref="0x7ff8d2677430" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x7ff8d3481d50" size="V:" alignment="V:">
    </attribute>
    <attribute name="dmemcpy" loc="16:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7ff8d3474d00" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x7ff8d3473200" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x7ff8d34732b0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x7ff8d3473360" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__pthread_mutex_s" loc="92:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7ff8d2aa31d0" defined="" size="I:40" alignment="I:8">
      <field name="__lock" ref="0x7ff8d2aa2260" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__count" ref="0x7ff8d2aa2310" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__owner" ref="0x7ff8d2aa23c0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nusers" ref="0x7ff8d2aa2470" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__kind" ref="0x7ff8d2aa2520" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__spins" ref="0x7ff8d2aa25d0" bit-offset="I:160" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__elision" ref="0x7ff8d2aa2680" bit-offset="I:176" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__list" ref="0x7ff8d2aa2730" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x7ff8d2aa4280"/>
          <typename><typedef-ref name="__pthread_list_t" ref="0x7ff8d2aa4d90"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="99:BaseStationP.nc" ref="0x7ff8d1f44b10" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="BaseStationP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="98:BaseStationP.nc" ref="0x7ff8d1f43d60" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="BaseStationP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="68:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SerialActiveMessageC.nc" ref="0x7ff8d1d8caa0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SerialActiveMessageC.nc" ref="0x7ff8d1d31bd0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x7ff8d2424ba0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="528:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc" ref="0x7ff8d215ae20" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="101:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc" ref="0x7ff8d215d350" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="96:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc" ref="0x7ff8d215c590" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="145:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc" ref="0x7ff8d21d7210" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="69:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc" ref="0x7ff8d20a5910" defined="" scoped="" size="I:72" alignment="I:8">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x7ff8d20a3830" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x7ff8d20a38e0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x7ff8d278f1c0"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x7ff8d20a3990" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x7ff8d278f1c0"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x7ff8d20a3a40" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x7ff8d20a3af0" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x7ff8d20a3ba0" bit-offset="I:320" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x7ff8d3471950"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x7ff8d20a3c50" bit-offset="I:328" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x7ff8d20a3d00" bit-offset="I:336" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x7ff8d20a3db0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
            <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x7ff8d20a3e60" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:72" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x7ff8d20a5910"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x7ff8d20a5d80"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="channel" ref="0x7ff8d20a3f10" bit-offset="I:512" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x7ff8d20a1020" bit-offset="I:520" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="83:BaseStationP.nc" ref="0x7ff8d1f9ccb0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="BaseStationP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
  </tags>
  <variables>
    <variable name="snr28" ref="0x7ff8d2142a50" loc="23:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr17" ref="0x7ff8d20daa50" loc="38:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randCM" ref="0x7ff8d25a22a0" loc="39:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x7ff8d24d55c0" loc="298:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr7" ref="0x7ff8d2114140" loc="29:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:720" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr30" ref="0x7ff8d20cca10" loc="43:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:7" size="I:112" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="current_node" ref="0x7ff8d2668550" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="test" ref="0x7ff8d25a2b90" loc="41:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr23" ref="0x7ff8d2144200" loc="22:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__timezone" ref="0x7ff8d25643f0" loc="284:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="snr12" ref="0x7ff8d20e5a10" loc="35:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:16" size="I:256" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr2" ref="0x7ff8d212a090" loc="27:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:42" size="I:672" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="channelTable" ref="0x7ff8d2757e00" loc="68:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x7ff8d2764080"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x7ff8d2549b80" loc="58:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:264000" alignment="I:8">
        <type-tag size="I:264" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x7ff8d2671170"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x7ff8d266d2e0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x7ff8d27579a0" loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_log.c">
      <type-array elements="I:167" size="I:2672" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x7ff8d275ad90"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x7ff8d2759650"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__tzname" ref="0x7ff8d2566b30" loc="282:/usr/include/time.h">
      <type-array elements="I:2" size="I:16" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="randU" ref="0x7ff8d25a3ae0" loc="39:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="snr21" ref="0x7ff8d2149020" loc="20:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr26" ref="0x7ff8d21515b0" loc="17:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="timezone" ref="0x7ff8d2563900" loc="298:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x7ff8d26a8d80" loc="44:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x7ff8d26f3be0"/>
        <typename><typedef-ref name="heap_t" ref="0x7ff8d26f2620"/></typename>
      </type-tag>
    </variable>
    <variable name="SECURITYLOCK" ref="0x7ff8d22e8ac0" loc="399:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="137:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
        <short> &#10; The 6LowPAN NALP ID for a TinyOS network is 63 (TEP 125).</short>
        <long> &#10; The 6LowPAN NALP ID for a TinyOS network is 63 (TEP 125).&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="snr15" ref="0x7ff8d20e1de0" loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr5" ref="0x7ff8d21208e0" loc="28:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:46" size="I:736" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x7ff8d261d4d0" loc="54:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x7ff8d254b600" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr18" ref="0x7ff8d20d0830" loc="41:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randC" ref="0x7ff8d25a3d60" loc="39:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr10" ref="0x7ff8d20ef710" loc="33:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:26" size="I:416" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="FreqKeyNum" ref="0x7ff8d2549530" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7ff8d33e5130"/></typename>
      </type-int>
    </variable>
    <variable name="snr29" ref="0x7ff8d213e020" loc="24:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaLow" ref="0x7ff8d261f120" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x7ff8d261e020" loc="50:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr8" ref="0x7ff8d20fea00" loc="31:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:34" size="I:544" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr31" ref="0x7ff8d20cd8b0" loc="42:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:3" size="I:48" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="numTotal" ref="0x7ff8d2549020" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x7ff8d2563540" loc="297:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x7ff8d261e4f0" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stdin_" ref="0x7ff8d2822460" loc="315:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x7ff8d2822020"/></type-tag>
    </variable>
    <variable name="allSnr" ref="0x7ff8d20caad0" loc="45:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:29" size="I:696" alignment="I:8">
        <type-tag size="I:24" alignment="I:8"><struct-ref name="snr_lqi" ref="0x7ff8d2158570"/>
          <typename><typedef-ref name="snr_lqi_t" ref="0x7ff8d2157020"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr24" ref="0x7ff8d21573f0" loc="15:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randCD" ref="0x7ff8d25a2020" loc="39:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr0" ref="0x7ff8d213c510" loc="25:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:25" size="I:400" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="j97" ref="0x7ff8d25a2840" loc="40:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr13" ref="0x7ff8d20e8200" loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:13" size="I:208" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x7ff8d2791c70" loc="78:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7ff8d33e6d20"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x7ff8d279aca0" loc="27:/usr/include/x86_64-linux-gnu/bits/sys_errlist.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="snr3" ref="0x7ff8d2136bf0" loc="26:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:720" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="tzname" ref="0x7ff8d25648d0" loc="289:/usr/include/time.h">
      <type-array elements="I:2" size="I:16" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x7ff8d26eb900" loc="58:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="=va_arg" ref="0x7ff8d3486860"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stderr_" ref="0x7ff8d2822dc0" loc="317:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x7ff8d2822020"/></type-tag>
    </variable>
    <variable name="csmaHigh" ref="0x7ff8d2620c90" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x7ff8d261e9c0" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x7ff8d23663a0" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="localNoise" ref="0x7ff8d25e5020" loc="10:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x7ff8d25e89a0"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x7ff8d25e7230"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr27" ref="0x7ff8d214fa50" loc="18:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="_IO_2_1_stdout_" ref="0x7ff8d2822910" loc="316:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x7ff8d2822020"/></type-tag>
    </variable>
    <variable name="snr16" ref="0x7ff8d20d7ae0" loc="39:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaInitLow" ref="0x7ff8d2620810" loc="45:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr6" ref="0x7ff8d21095a0" loc="30:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:720" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="numCase2" ref="0x7ff8d254bb50" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr19" ref="0x7ff8d20d3b70" loc="40:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:160" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sim_ticks" ref="0x7ff8d2668170" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x7ff8d278f1c0"/></typename>
      </type-int>
    </variable>
    <variable name="snr22" ref="0x7ff8d21478f0" loc="21:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__daylight" ref="0x7ff8d2564020" loc="283:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stderr" ref="0x7ff8d2806e60" loc="170:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7ff8d28367f0"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="connectivity" ref="0x7ff8d25e7920" loc="9:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:8008" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x7ff8d25f4510"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x7ff8d25f2020"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="snr11" ref="0x7ff8d20f43d0" loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:20" size="I:320" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x7ff8d279a7d0" loc="26:/usr/include/x86_64-linux-gnu/bits/sys_errlist.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdin" ref="0x7ff8d28065a0" loc="168:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7ff8d28367f0"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="simTimeBuf" ref="0x7ff8d2638620" loc="183:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="snr20" ref="0x7ff8d214c330" loc="19:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:160" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0x7ff8d26688d0" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_LIB_VERSION" ref="0x7ff8d286a6f0" loc="359:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x7ff8d286b020"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x7ff8d286a280"/></typename>
      </type-tag>
    </variable>
    <variable name="sensitivity" ref="0x7ff8d25e5370" loc="11:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr25" ref="0x7ff8d21558f0" loc="16:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:160" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="allSnr_len" ref="0x7ff8d20bb180" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="signgam" ref="0x7ff8d286d810" loc="168:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x7ff8d2620380" loc="44:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr14" ref="0x7ff8d20dee20" loc="37:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:14" size="I:224" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="stdout" ref="0x7ff8d2806a00" loc="169:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7ff8d28367f0"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="csmaAckTime" ref="0x7ff8d261d960" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x7ff8d261f5f0" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x7ff8d261d020" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x7ff8d261fac0" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0x7ff8d25a25e0" loc="40:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x7ff8d2422910" loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x7ff8d2422020" loc="60:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x7ff8d2423b60" loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x7ff8d24224d0" loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x7ff8d2422e60" loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7ff8d2783020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x7ff8d2783410"/></typename>
      </type-tag>
    </variable>
    <variable name="radioChannel" ref="0x7ff8d22de4c0" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="bootEvent" ref="0x7ff8d22de110" loc="54:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7ff8d2783020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x7ff8d2783410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x7ff8d22e59a0" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x7ff8d22e55e0" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x7ff8d22e5ce0" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x7ff8d224b090" loc="62:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
        <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x7ff8d224b4a0" loc="63:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
          <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sendEvent" ref="0x7ff8d21c91e0" loc="78:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7ff8d2783020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x7ff8d2783410"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0x7ff8d21d3c10" loc="70:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0x7ff8d216bb50" loc="294:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0x7ff8d21d25c0" loc="72:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0x7ff8d21d29a0" loc="73:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0x7ff8d21d2d70" loc="74:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
          <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x7ff8d21d20d0" loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0x7ff8d21c95b0" loc="80:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
        <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0x7ff8d21ca920" loc="76:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x7ff8d21ca420" loc="75:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0x7ff8d21cada0" loc="77:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0x7ff8d2070370" loc="206:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x7ff8d20a63a0" loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x7ff8d2071a00" loc="203:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7ff8d2783020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x7ff8d2783410"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x7ff8d20a55e0" loc="65:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x7ff8d278f1c0"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x7ff8d206f160" loc="208:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x7ff8d20a1410" loc="84:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:72" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x7ff8d20a5910"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x7ff8d20a5d80"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x7ff8d2070890" loc="207:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
          <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="rssi" ref="0x7ff8d20a6b90" loc="63:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="clearThreshold" ref="0x7ff8d2071d90" loc="205:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x7ff8d20a5090" loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x7ff8d20a6020" loc="60:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
          <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x7ff8d20a6710" loc="62:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0x7ff8d1fc0460" loc="68:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x7ff8d2473bd0"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x7ff8d1fc00d0" loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x7ff8d1fc1bd0" loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="uartFull" ref="0x7ff8d1f8e020" loc="91:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="tmpLen" ref="0x7ff8d1f69e70" loc="188:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="radioQueue" ref="0x7ff8d1f8d020" loc="94:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-array elements="I:12" size="I:96" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
            <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="count" ref="0x7ff8d1f78150" loc="145:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="radioQueueBufs" ref="0x7ff8d1f8e570" loc="93:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-array elements="I:12" size="I:576" alignment="I:1">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
          <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="radioOut" ref="0x7ff8d1f8d640" loc="95:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="uartIn" ref="0x7ff8d1f90690" loc="90:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="radioIn" ref="0x7ff8d1f8d3a0" loc="95:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="radioBusy" ref="0x7ff8d1f8d9b0" loc="96:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="uartOut" ref="0x7ff8d1f90920" loc="90:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </variable>
    <variable name="uartBusy" ref="0x7ff8d1f90c90" loc="91:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="uartQueueBufs" ref="0x7ff8d1f9b900" loc="88:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-array elements="I:12" size="I:576" alignment="I:1">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
          <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="radioFull" ref="0x7ff8d1f8dd50" loc="96:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </variable>
    <variable name="uartQueue" ref="0x7ff8d1f90320" loc="89:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-array elements="I:12" size="I:96" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
            <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
  </variables>
  <constants>
    <constant cst="I:46" name="CC2420_DACTST" ref="0x7ff8d2309390" loc="219:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACIE" ref="0x7ff8d238a330" loc="1075:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x7ff8d239f670" loc="943:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x7ff8d2381320" loc="1132:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x7ff8d238d980" loc="1058:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x7ff8d23494f0" loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x7ff8d23e7390" loc="140:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x7ff8d23ee8a0" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x7ff8d23b7980" loc="786:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x7ff8d2367ca0" loc="1299:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x7ff8d2343a40" loc="133:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="LEDS_LED4" ref="0x7ff8d1f99260" loc="48:/home/rodrigoct/tinyos-main-master/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x7ff8d234a3f0" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x7ff8d23cc020" loc="705:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x7ff8d23a1330" loc="924:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x7ff8d2382660" loc="1126:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x7ff8d237ecc0" loc="1154:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x7ff8d23a2340" loc="919:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x7ff8d2379340" loc="1182:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="CC2420_STATUS_TX_UNDERFLOW" ref="0x7ff8d2314650" loc="169:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="CC2420_FSTST3" ref="0x7ff8d230a550" loc="215:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x7ff8d2387020" loc="1093:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x7ff8d2385320" loc="1106:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x7ff8d23a9980" loc="876:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x7ff8d23a5980" loc="902:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x7ff8d24695f0" loc="98:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x7ff8d23cf330" loc="687:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MDMCTRL0_PAN_COORDINATOR" ref="0x7ff8d23016d0" loc="258:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x7ff8d23a8660" loc="882:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x7ff8d239c340" loc="961:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="P_ALL" ref="0x7ff8d2b03200" loc="52:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x7ff8d23c4cb0" loc="763:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_CCM" ref="0x7ff8d22eabf0" loc="389:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x7ff8d23c96a0" loc="730:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x7ff8d236a340" loc="1275:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="_IEEE_" ref="0x7ff8d286b3b0" loc="349:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x7ff8d23acca0" loc="858:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x7ff8d23a2660" loc="920:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_TXCTRL_TXMIX_CURRENT" ref="0x7ff8d22fcca0" loc="288:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x7ff8d234ede0" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x7ff8d23dc1d0" loc="269:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x7ff8d23cb640" loc="714:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="CC2420_MANOR" ref="0x7ff8d230c8a0" loc="207:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x7ff8d23afc50" loc="839:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_SECCTRL0_SEC_RXKEYSEL" ref="0x7ff8d22f3820" loc="331:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="_ISgraph" ref="0x7ff8d285e7d0" loc="55:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x7ff8d23e41d0" loc="169:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x7ff8d239f020" loc="939:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x7ff8d234f4b0" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x7ff8d2380620" loc="1138:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x7ff8d237cc20" loc="1166:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x7ff8d23dbdf0" loc="283:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x7ff8d239d940" loc="956:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x7ff8d2377320" loc="1194:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x7ff8d2373960" loc="1222:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="CC2420_FSCTRL" ref="0x7ff8d230e550" loc="197:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RAM_TXFIFO" ref="0x7ff8d2307150" loc="226:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CTR" ref="0x7ff8d22e9cf0" loc="394:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_MDMCTRL1_MODULATION_MODE" ref="0x7ff8d22fe020" loc="270:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x7ff8d23ad020" loc="847:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x7ff8d2388020" loc="1086:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x7ff8d23d0970" loc="684:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MANFIDL_MANFID" ref="0x7ff8d22eee70" loc="364:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x7ff8d23d9740" loc="298:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x7ff8d23c4380" loc="760:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x7ff8d23b2340" loc="817:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x7ff8d2396cc0" loc="1004:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x7ff8d23f2c20" loc="36:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_TXCTRL_TXMIX_CAP_ARRAY" ref="0x7ff8d22fc8b0" loc="287:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x7ff8d23ae650" loc="844:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x7ff8d2373340" loc="1218:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x7ff8d236f980" loc="1246:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="CC2420_MANAND" ref="0x7ff8d230c540" loc="206:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x7ff8d239d020" loc="953:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x7ff8d2345190" loc="109:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x7ff8d23a5660" loc="901:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SECCTRL0_SEC_CBC_HEAD" ref="0x7ff8d22f4b80" loc="328:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x7ff8d23e5e10" loc="166:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x7ff8d2352d80" loc="128:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x7ff8d2384020" loc="1112:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x7ff8d23c7070" loc="740:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x7ff8d2388cc0" loc="1092:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x7ff8d236dc50" loc="1261:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="_ISalpha" ref="0x7ff8d2862070" loc="50:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x7ff8d2468810" loc="106:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x7ff8d23f1d90" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_SACK" ref="0x7ff8d23116f0" loc="184:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x7ff8d23e33a0" loc="182:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MANFIDH_PARTNUM" ref="0x7ff8d22ed940" loc="369:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x7ff8d23e5020" loc="154:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x7ff8d2676df0" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x7ff8d239e660" loc="948:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x7ff8d23969a0" loc="1003:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_IOCFG0_BCN_ACCEPT" ref="0x7ff8d22f0140" loc="348:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_RXCTRL1_HIGH_HGM" ref="0x7ff8d22f7020" loc="309:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x7ff8d23b8360" loc="779:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x7ff8d23b3650" loc="811:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x7ff8d23b1020" loc="821:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x7ff8d236d920" loc="1258:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x7ff8d23b6c80" loc="794:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x7ff8d2369620" loc="1283:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x7ff8d2397ca0" loc="997:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x7ff8d2348330" loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x7ff8d23e21d0" loc="194:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x7ff8d23c2660" loc="773:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="MAC_PACKET_SIZE" ref="0x7ff8d23182c0" loc="150:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x7ff8d23d0020" loc="679:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x7ff8d23c9360" loc="727:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x7ff8d234db10" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x7ff8d234c520" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_FSMTC_TC_TXEND2PAOFF" ref="0x7ff8d22eb070" loc="377:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x7ff8d23ca660" loc="721:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x7ff8d246bb80" loc="89:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x7ff8d2392330" loc="1025:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x7ff8d2342d80" loc="145:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SVID_" ref="0x7ff8d286b630" loc="350:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="CC2420_BATTMON" ref="0x7ff8d230d020" loc="200:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x7ff8d29aedb0" loc="56:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x7ff8d23411b0" loc="146:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x7ff8d23dc550" loc="272:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_IOCFG1_CCAMUX" ref="0x7ff8d22ee3d0" loc="359:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RXCTRL0_MED_LNA_GAIN" ref="0x7ff8d22fa810" loc="297:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x7ff8d236b020" loc="1267:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x7ff8d2368330" loc="1289:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x7ff8d2392960" loc="1027:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="CC2420_NONCE_FLAGS" ref="0x7ff8d2303020" loc="244:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x7ff8d237e020" loc="1148:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x7ff8d237a640" loc="1176:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x7ff8d2376c80" loc="1204:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x7ff8d2371330" loc="1232:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="CC2420_MDMCTRL1" ref="0x7ff8d230f020" loc="191:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x7ff8d23b6970" loc="793:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x7ff8d23a0340" loc="933:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x7ff8d2372920" loc="1227:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x7ff8d23b8cc0" loc="782:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x7ff8d2399330" loc="980:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x7ff8d236d020" loc="1255:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RSSI_CCA_THR" ref="0x7ff8d22fee60" loc="276:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x7ff8d2392c90" loc="1030:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x7ff8d23f0830" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x7ff8d23f1020" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x7ff8d23dd730" loc="264:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x7ff8d23cbca0" loc="718:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x7ff8d23e1700" loc="216:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x7ff8d23b4020" loc="802:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x7ff8d236a980" loc="1277:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x7ff8d2367340" loc="1296:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="LEDS_LED7" ref="0x7ff8d1f981a0" loc="51:/home/rodrigoct/tinyos-main-master/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x7ff8d23ce970" loc="696:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x7ff8d23ab330" loc="860:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x7ff8d2383cb0" loc="1123:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x7ff8d23df390" loc="238:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x7ff8d2469bb0" loc="103:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x7ff8d23e7020" loc="139:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x7ff8d237e360" loc="1151:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_TXCTRL_RESERVED" ref="0x7ff8d22fb470" loc="290:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="NO_SEC" ref="0x7ff8d22e9020" loc="390:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x7ff8d2386940" loc="1103:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x7ff8d23ea540" loc="134:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_SACKPEND" ref="0x7ff8d2311a70" loc="185:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x7ff8d2342410" loc="139:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x7ff8d2383020" loc="1117:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x7ff8d237f640" loc="1145:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x7ff8d237bc70" loc="1173:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x7ff8d2376350" loc="1201:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x7ff8d2343d90" loc="134:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_FSCTRL_LOCK_STATUS" ref="0x7ff8d22f5bc0" loc="322:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x7ff8d2675d00" loc="60:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x7ff8d23db390" loc="278:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="CC2420_RAM_RXFIFO" ref="0x7ff8d23074e0" loc="227:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x7ff8d23c86b0" loc="735:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x7ff8d236b990" loc="1272:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x7ff8d236cc60" loc="1266:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x7ff8d2368020" loc="1288:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SFLUSHRX" ref="0x7ff8d2311020" loc="182:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CBC_MAC_4" ref="0x7ff8d22e9360" loc="391:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x7ff8d23ad650" loc="849:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x7ff8d23ae970" loc="845:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x7ff8d23a3340" loc="912:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x7ff8d23529e0" loc="127:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x7ff8d23a9020" loc="873:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x7ff8d2934ac0" loc="60:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_RXCTRL0_LOW_LNA_GAIN" ref="0x7ff8d22fac00" loc="298:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x7ff8d2393980" loc="1022:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x7ff8d234b360" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x7ff8d23d9ad0" loc="301:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x7ff8d23d8940" loc="313:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_ISblank" ref="0x7ff8d285d620" loc="56:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x7ff8d2390680" loc="1040:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x7ff8d2389c60" loc="1085:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x7ff8d23b1970" loc="826:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="CC2420_FSTST0" ref="0x7ff8d230ba70" loc="212:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x7ff8d2344660" loc="121:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x7ff8d23e0c60" loc="232:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x7ff8d23a6660" loc="894:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x7ff8d239b350" loc="968:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_SXOSCOFF" ref="0x7ff8d2312bb0" loc="181:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_IOCFG1_HSSD_SRC" ref="0x7ff8d22efbe0" loc="357:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x7ff8d23b3c90" loc="815:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x7ff8d23ed020" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x7ff8d23cc340" loc="706:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x7ff8d2378340" loc="1187:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x7ff8d2374980" loc="1215:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x7ff8d236f020" loc="1243:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x7ff8d23e3710" loc="185:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x7ff8d23e4c40" loc="176:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_TXCTRL_PA_LEVEL" ref="0x7ff8d22fb830" loc="291:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x7ff8d239eca0" loc="950:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x7ff8d23da560" loc="287:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x7ff8d234e4b0" loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x7ff8d234b020" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x7ff8d2346ad0" loc="107:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x7ff8d2370330" loc="1237:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x7ff8d23e5a90" loc="163:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x7ff8d23c6070" loc="745:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_NONCE_FRAME_COUNTER" ref="0x7ff8d2304810" loc="242:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x7ff8d23eac00" loc="136:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x7ff8d23dde00" loc="268:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x7ff8d23c2ca0" loc="775:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x7ff8d2934460" loc="58:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x7ff8d234c1e0" loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x7ff8d234cbb0" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x7ff8d26777e0" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x7ff8d23491b0" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x7ff8d23b2640" loc="818:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x7ff8d2389330" loc="1082:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x7ff8d239fcb0" loc="945:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="CC2420_SECCTRL0" ref="0x7ff8d230e8d0" loc="198:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x7ff8d2381920" loc="1134:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x7ff8d237c020" loc="1162:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x7ff8d23e61e0" loc="146:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x7ff8d23de8b0" loc="254:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x7ff8d23f21c0" loc="27:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x7ff8d23eddf0" loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LEDS_LED2" ref="0x7ff8d1f9a850" loc="46:/home/rodrigoct/tinyos-main-master/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x7ff8d2382ca0" loc="1128:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x7ff8d237d340" loc="1156:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x7ff8d2379980" loc="1184:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x7ff8d2374020" loc="1212:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x7ff8d23a4ca0" loc="910:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_IOCFG0_SFD_POLARITY" ref="0x7ff8d22f0d20" loc="351:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x7ff8d23cd660" loc="700:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x7ff8d238f330" loc="1044:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x7ff8d2395020" loc="1005:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="CC2420_AGCTST0" ref="0x7ff8d230b020" loc="209:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x7ff8d2385920" loc="1108:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x7ff8d2398cc0" loc="992:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x7ff8d23c3ca0" loc="770:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_SECCTRL0_SEC_TXKEYSEL" ref="0x7ff8d22f3420" loc="330:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x7ff8d23cf950" loc="689:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x7ff8d2393660" loc="1021:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x7ff8d23a8ca0" loc="884:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x7ff8d23c3330" loc="765:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x7ff8d2344970" loc="122:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x7ff8d23a6ca0" loc="896:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_BATTMON_BATTMON_EN" ref="0x7ff8d22f1610" loc="343:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x7ff8d23ae320" loc="841:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x7ff8d238e680" loc="1052:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x7ff8d2677bf0" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x7ff8d239c650" loc="962:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="CC2420_RXCTRL0" ref="0x7ff8d230fdd0" loc="195:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_STATUS_LOCK" ref="0x7ff8d2315570" loc="166:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x7ff8d23f16c0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x7ff8d23a09a0" loc="937:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x7ff8d237b320" loc="1168:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x7ff8d2377920" loc="1196:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x7ff8d2372020" loc="1224:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x7ff8d236e640" loc="1252:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_RXCTRL1_LNA_CAP_ARRAY" ref="0x7ff8d22f77e0" loc="311:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_FSCTRL_FREQ" ref="0x7ff8d22f4020" loc="323:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x7ff8d2388660" loc="1088:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x7ff8d23cf020" loc="686:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x7ff8d2399c90" loc="985:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x7ff8d234b9e0" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FP_NAN" ref="0x7ff8d286ddc0" loc="211:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x7ff8d23d93b0" loc="295:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_NONCE_SOURCE_ADDRESS" ref="0x7ff8d2304c00" loc="243:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x7ff8d26755d0" loc="58:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x7ff8d23ed710" loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x7ff8d238b020" loc="1067:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x7ff8d236e020" loc="1248:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x7ff8d23adc70" loc="851:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ITIMER_VIRTUAL" ref="0x7ff8d2680440" loc="97:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x7ff8d23a3650" loc="913:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x7ff8d23a5350" loc="900:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x7ff8d238c340" loc="1063:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x7ff8d23e2540" loc="197:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="CC2420_IOCFG0" ref="0x7ff8d230d390" loc="201:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x7ff8d2384640" loc="1114:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x7ff8d2380c60" loc="1142:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x7ff8d23c5cf0" loc="756:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x7ff8d23c89d0" loc="736:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x7ff8d236c330" loc="1263:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x7ff8d23c5390" loc="753:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SECCTRL1_SEC_TXL" ref="0x7ff8d22f2720" loc="337:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="CC2420_STATUS_ENC_BUSY" ref="0x7ff8d23140b0" loc="168:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x7ff8d23c56b0" loc="754:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x7ff8d23a1c80" loc="929:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x7ff8d23aa680" loc="870:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x7ff8d23df020" loc="235:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_TIME_ACK_TURNAROUND" ref="0x7ff8d2317020" loc="156:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_FSCTRL_LOCK_THR" ref="0x7ff8d22f6af0" loc="318:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x7ff8d23ab960" loc="864:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x7ff8d2397340" loc="994:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:304" name="CC2420_RAM_KEY1" ref="0x7ff8d23063a0" loc="231:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x7ff8d23e1020" loc="210:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x7ff8d2396020" loc="998:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x7ff8d238d020" loc="1055:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x7ff8d238b970" loc="1072:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x7ff8d23b7660" loc="785:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x7ff8d23b4cb0" loc="808:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_MAIN_DEMOD_RESETn" ref="0x7ff8d2303e60" loc="250:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x7ff8d23b2c40" loc="820:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x7ff8d2369c20" loc="1285:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x7ff8d23d9e60" loc="304:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x7ff8d23e6c40" loc="151:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x7ff8d23da8d0" loc="288:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x7ff8d239d320" loc="954:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x7ff8d2389640" loc="1083:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x7ff8d2387c60" loc="1097:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x7ff8d234adb0" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x7ff8d23454b0" loc="110:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FP_ZERO" ref="0x7ff8d286c4c0" loc="217:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x7ff8d23a7cc0" loc="891:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x7ff8d23caca0" loc="723:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_RXCTRL1_RXBPF_MIDCUR" ref="0x7ff8d22f8410" loc="306:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_TIME_SYMBOL" ref="0x7ff8d2317750" loc="158:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x7ff8d238f960" loc="1046:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x7ff8d23dba80" loc="282:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x7ff8d23d7070" loc="319:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x7ff8d2368950" loc="1291:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x7ff8d2791590" loc="76:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x7ff8d2934140" loc="57:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x7ff8d233c020" loc="61:/home/rodrigoct/tinyos-main-master/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x7ff8d237ac60" loc="1178:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x7ff8d2375330" loc="1206:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x7ff8d2371950" loc="1234:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x7ff8d233d7b0" loc="58:/home/rodrigoct/tinyos-main-master/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x7ff8d23b4340" loc="803:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x7ff8d23c6390" loc="746:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_XOPEN_" ref="0x7ff8d286b8c0" loc="351:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x7ff8d23ce020" loc="691:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x7ff8d23a4330" loc="905:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x7ff8d2387330" loc="1094:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="CC2420_ACK_WAIT_DELAY" ref="0x7ff8d2316730" loc="161:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_FSCTRL_CAL_DONE" ref="0x7ff8d22f5020" loc="319:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x7ff8d2351250" loc="129:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x7ff8d2391950" loc="1034:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x7ff8d2381020" loc="1131:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x7ff8d23b7340" loc="784:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x7ff8d275aa30" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x7ff8d23f28a0" loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x7ff8d2367980" loc="1298:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="LEDS_LED5" ref="0x7ff8d1f99750" loc="49:/home/rodrigoct/tinyos-main-master/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x7ff8d23cd020" loc="698:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x7ff8d23cdca0" loc="704:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x7ff8d23de1c0" loc="250:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x7ff8d23a1020" loc="923:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x7ff8d2382340" loc="1125:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x7ff8d237e9a0" loc="1153:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x7ff8d2379020" loc="1181:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="CC2420_TOPTST" ref="0x7ff8d2309700" loc="220:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_CTR" ref="0x7ff8d22ea8a0" loc="388:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x7ff8d239a950" loc="977:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x7ff8d239a020" loc="974:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x7ff8d2385020" loc="1105:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_STXON" ref="0x7ff8d2312140" loc="178:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x7ff8d234b6a0" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CC2420_SXOSCON" ref="0x7ff8d2313680" loc="175:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x7ff8d23a8340" loc="881:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x7ff8d23dfde0" loc="247:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x7ff8d23c49a0" loc="762:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x7ff8d23dc8c0" loc="273:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x7ff8d23da1e0" loc="284:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x7ff8d23c8070" loc="733:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x7ff8d236a020" loc="1274:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_MDMCTRL0_AUTOCRC" ref="0x7ff8d23007c0" loc="262:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x7ff8d23a7660" loc="887:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x7ff8d234d180" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x7ff8d23cb330" loc="713:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RXCTRL1_RXMIX_CURRENT" ref="0x7ff8d22f6420" loc="314:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x7ff8d23a9660" loc="875:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x7ff8d2676480" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SFDMUX_SFD" ref="0x7ff8d22eb710" loc="381:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_MDMCTRL0_AUTOACK" ref="0x7ff8d2300b90" loc="263:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_SRFOFF" ref="0x7ff8d2312830" loc="180:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_RXCTRL0_HIGH_LNA_GAIN" ref="0x7ff8d22fa420" loc="296:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x7ff8d2380320" loc="1137:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x7ff8d237c920" loc="1165:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_ISpunct" ref="0x7ff8d285b2b0" loc="58:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x7ff8d239d630" loc="955:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x7ff8d2377020" loc="1193:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x7ff8d2373660" loc="1221:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x7ff8d23d8220" loc="307:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x7ff8d23aec90" loc="846:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x7ff8d23e4550" loc="172:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x7ff8d23b5670" loc="799:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x7ff8d23b0020" loc="828:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x7ff8d23af020" loc="835:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x7ff8d23c5070" loc="752:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x7ff8d2390cc0" loc="1042:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CCM_4" ref="0x7ff8d22e8070" loc="395:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_MAIN_ENC_RESETn" ref="0x7ff8d2303a80" loc="249:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x7ff8d23c4070" loc="759:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="_ISprint" ref="0x7ff8d285f980" loc="54:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x7ff8d2391640" loc="1033:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x7ff8d23cc980" loc="708:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x7ff8d23ec540" loc="105:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x7ff8d2397660" loc="995:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_STXENC" ref="0x7ff8d23101e0" loc="187:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x7ff8d2373020" loc="1217:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x7ff8d236f660" loc="1245:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="CC2420_SYNCWORD" ref="0x7ff8d230f6f0" loc="193:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x7ff8d23d1930" loc="677:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x7ff8d23d0640" loc="681:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:360" name="CC2420_RAM_PANID" ref="0x7ff8d2305230" loc="235:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x7ff8d23e6560" loc="149:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x7ff8d234fe50" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x7ff8d2346490" loc="105:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x7ff8d2385c50" loc="1111:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x7ff8d233db00" loc="59:/home/rodrigoct/tinyos-main-master/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x7ff8d23c79d0" loc="743:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x7ff8d23889a0" loc="1091:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x7ff8d234de60" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x7ff8d238dcc0" loc="1061:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x7ff8d2345b00" loc="112:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x7ff8d234aa70" loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x7ff8d23dd020" loc="258:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x7ff8d239e340" loc="947:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x7ff8d2380020" loc="1136:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x7ff8d2396680" loc="1002:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x7ff8d23e7700" loc="141:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x7ff8d237c620" loc="1164:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x7ff8d2378c80" loc="1192:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:352" name="CC2420_RAM_IEEEADR" ref="0x7ff8d2306e80" loc="234:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_POSIX_" ref="0x7ff8d286bb50" loc="352:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x7ff8d23b6020" loc="790:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x7ff8d236d620" loc="1257:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x7ff8d2369320" loc="1282:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x7ff8d2397980" loc="996:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_MDMCTRL1_TX_MODE" ref="0x7ff8d22fe3f0" loc="271:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_RXCTRL1_LOW_LOWGAIN" ref="0x7ff8d22f8800" loc="307:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x7ff8d23c2340" loc="772:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_MDMCTRL0_RESERVED_FRAME_MODE" ref="0x7ff8d23012b0" loc="257:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x7ff8d23efa90" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x7ff8d23ca340" loc="720:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x7ff8d2395c80" loc="1011:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x7ff8d23d0330" loc="680:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_MDMCTRL1_DEMOD_AVG_MODE" ref="0x7ff8d22ffb40" loc="269:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="CC2420_RXFIFO" ref="0x7ff8d2309de0" loc="222:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x7ff8d23e5720" loc="160:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x7ff8d23515e0" loc="130:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="__codecvt_error" ref="0x7ff8d282c5f0" loc="180:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_MDMCTRL1_CORR_THR" ref="0x7ff8d22ff730" loc="268:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x7ff8d237fc60" loc="1147:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x7ff8d237a330" loc="1175:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x7ff8d2376970" loc="1203:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x7ff8d2371020" loc="1231:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x7ff8d23b3970" loc="812:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x7ff8d23a0660" loc="934:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x7ff8d2376020" loc="1198:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x7ff8d23b7020" loc="783:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x7ff8d2399020" loc="979:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x7ff8d2372620" loc="1226:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x7ff8d236ec40" loc="1254:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x7ff8d23eb3a0" loc="119:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x7ff8d238c660" loc="1064:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x7ff8d233d020" loc="56:/home/rodrigoct/tinyos-main-master/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x7ff8d2399670" loc="983:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x7ff8d23ac980" loc="857:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x7ff8d23cccb0" loc="711:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x7ff8d2393350" loc="1020:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x7ff8d23b4990" loc="807:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x7ff8d23e3a90" loc="188:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x7ff8d28b0140" loc="62:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x7ff8d23ecc30" loc="111:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x7ff8d23ce660" loc="695:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x7ff8d23ab020" loc="859:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x7ff8d23a3c70" loc="915:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x7ff8d23a2020" loc="918:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x7ff8d238ac80" loc="1078:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x7ff8d2383990" loc="1122:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_STXCAL" ref="0x7ff8d23139f0" loc="176:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x7ff8d23de540" loc="253:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x7ff8d234c860" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x7ff8d23e0560" loc="226:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="__codecvt_partial" ref="0x7ff8d282c310" loc="179:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x7ff8d238a020" loc="1074:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x7ff8d2394020" loc="1012:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x7ff8d2386640" loc="1102:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x7ff8d2468400" loc="105:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x7ff8d233d430" loc="57:/home/rodrigoct/tinyos-main-master/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x7ff8d2384c60" loc="1116:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x7ff8d237f330" loc="1144:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x7ff8d237b960" loc="1172:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x7ff8d23c8390" loc="734:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x7ff8d236b670" loc="1271:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x7ff8d236c950" loc="1265:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x7ff8d23467b0" loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x7ff8d23cb980" loc="717:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MANFIDL_PARTNUM" ref="0x7ff8d22eeab0" loc="363:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x7ff8d23a1660" loc="927:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x7ff8d23ad340" loc="848:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x7ff8d23a3020" loc="911:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_IOCFG0_CCA_POLARITY" ref="0x7ff8d22ef140" loc="352:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x7ff8d23aacc0" loc="872:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0x7ff8d28b07a0" loc="64:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x7ff8d2394920" loc="1015:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x7ff8d23b1340" loc="822:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x7ff8d2349830" loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_IOCFG0_FIFOP_POLARITY" ref="0x7ff8d22f0930" loc="350:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_BATTMON_BATTMON_VOLTAGE" ref="0x7ff8d22f1a20" loc="344:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x7ff8d238a640" loc="1076:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CC2420_MANFIDL" ref="0x7ff8d230da70" loc="203:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x7ff8d23ef3b0" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x7ff8d23d7400" loc="322:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_NO_SEC" ref="0x7ff8d22ea1e0" loc="386:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x7ff8d239c020" loc="960:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x7ff8d239c950" loc="963:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x7ff8d239a330" loc="975:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x7ff8d2389950" loc="1084:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x7ff8d2343070" loc="127:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="CC2420_FSTST1" ref="0x7ff8d230bde0" loc="213:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x7ff8d238e020" loc="1048:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="P_PID" ref="0x7ff8d2b03480" loc="53:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x7ff8d23e08e0" loc="229:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x7ff8d23a6340" loc="893:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x7ff8d23b1c80" loc="827:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x7ff8d23ee530" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LEDS_LED0" ref="0x7ff8d1f9de20" loc="44:/home/rodrigoct/tinyos-main-master/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CC2420_CBC_MAC" ref="0x7ff8d22ea550" loc="387:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SNOP" ref="0x7ff8d2313310" loc="174:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CBC_MAC_8" ref="0x7ff8d22e96a0" loc="392:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x7ff8d237d980" loc="1158:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x7ff8d23b7cb0" loc="789:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x7ff8d23af640" loc="837:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x7ff8d2378020" loc="1186:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x7ff8d2374660" loc="1214:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x7ff8d2398660" loc="988:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x7ff8d2370ca0" loc="1242:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RXCTRL0_LOW_LNA_CURRENT" ref="0x7ff8d22f9890" loc="301:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x7ff8d23c69f0" loc="750:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x7ff8d239e980" loc="949:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x7ff8d234e7c0" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x7ff8d239cc60" loc="964:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x7ff8d239b660" loc="969:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x7ff8d2375950" loc="1208:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x7ff8d2370020" loc="1236:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_TXCTRL_TXMIXBUF_CUR" ref="0x7ff8d22fc0b0" loc="285:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x7ff8d23b5990" loc="800:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_ISOC_" ref="0x7ff8d286bdf0" loc="353:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x7ff8d23c7cf0" loc="744:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x7ff8d2390020" loc="1036:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x7ff8d23df700" loc="241:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x7ff8d2387950" loc="1096:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MAC_FOOTER_SIZE" ref="0x7ff8d231aab0" loc="148:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x7ff8d239f990" loc="944:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="CC2420_SECCTRL1" ref="0x7ff8d230ec50" loc="199:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x7ff8d238b340" loc="1068:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x7ff8d2381620" loc="1133:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x7ff8d237dca0" loc="1161:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x7ff8d23ed390" loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x7ff8d23e1390" loc="213:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="LEDS_LED3" ref="0x7ff8d1f9ad40" loc="47:/home/rodrigoct/tinyos-main-master/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_STATUS_RSSI_VALID" ref="0x7ff8d2315020" loc="165:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x7ff8d23909a0" loc="1041:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="__codecvt_ok" ref="0x7ff8d282c020" loc="178:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x7ff8d23cd340" loc="699:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x7ff8d2382980" loc="1127:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x7ff8d237d020" loc="1155:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x7ff8d2379660" loc="1183:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x7ff8d2375c90" loc="1211:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="CC2420_FSTST2" ref="0x7ff8d230a1e0" loc="214:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_NONCE_KEY_SEQ_COUNTER" ref="0x7ff8d2304420" loc="241:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CCM_16" ref="0x7ff8d22e86d0" loc="397:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x7ff8d238cca0" loc="1066:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CCM_8" ref="0x7ff8d22e8390" loc="396:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="CC2420_AGCTST1" ref="0x7ff8d230b390" loc="210:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x7ff8d2385620" loc="1107:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x7ff8d23a9ca0" loc="877:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x7ff8d23a5ca0" loc="903:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x7ff8d23c3980" loc="769:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x7ff8d23cf640" loc="688:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x7ff8d233faf0" loc="55:/home/rodrigoct/tinyos-main-master/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x7ff8d2346df0" loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x7ff8d23aa340" loc="867:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x7ff8d23a8980" loc="883:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_RXCTRL0_HIGH_LNA_CURRENT" ref="0x7ff8d22f9070" loc="299:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x7ff8d23c3020" loc="764:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x7ff8d23db700" loc="279:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x7ff8d23c99c0" loc="731:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ITIMER_PROF" ref="0x7ff8d26807d0" loc="101:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x7ff8d236a660" loc="1276:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x7ff8d2367020" loc="1295:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x7ff8d2345e60" loc="116:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_SFLUSHTX" ref="0x7ff8d23113a0" loc="183:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_RXCTRL1_RXMIX_TAIL" ref="0x7ff8d22f7bc0" loc="312:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x7ff8d23ac340" loc="855:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x7ff8d23a2980" loc="921:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="CC2420_MAIN" ref="0x7ff8d2310880" loc="189:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x7ff8d2349b70" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x7ff8d234ead0" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x7ff8d23ae020" loc="840:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x7ff8d23e7df0" loc="145:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x7ff8d23d1300" loc="675:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x7ff8d23eb020" loc="116:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x7ff8d246ae40" loc="96:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x7ff8d23f1370" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_IScntrl" ref="0x7ff8d285c460" loc="57:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x7ff8d23a0cc0" loc="938:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x7ff8d2393020" loc="1017:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="CC2420_RXCTRL1" ref="0x7ff8d230e1e0" loc="196:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x7ff8d237b020" loc="1167:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x7ff8d239dc50" loc="957:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x7ff8d2377620" loc="1195:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x7ff8d2373c60" loc="1223:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x7ff8d236e340" loc="1251:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="CC2420_RSSI" ref="0x7ff8d230f370" loc="192:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:336" name="CC2420_RAM_CBCSTATE" ref="0x7ff8d2306ae0" loc="233:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_NONCE_BLOCK_COUNTER" ref="0x7ff8d2304020" loc="240:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x7ff8d2388340" loc="1087:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x7ff8d23d0c80" loc="685:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x7ff8d23b89a0" loc="781:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x7ff8d23b0650" loc="830:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x7ff8d2399980" loc="984:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x7ff8d238f640" loc="1045:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x7ff8d2351990" loc="131:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x7ff8d23b0330" loc="829:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x7ff8d23d9020" loc="292:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_BACKOFF_PERIOD" ref="0x7ff8d2317d40" loc="159:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="CC2420_AGCTST2" ref="0x7ff8d230b700" loc="211:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x7ff8d238d660" loc="1057:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x7ff8d23eec20" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x7ff8d236fca0" loc="1247:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x7ff8d23ad960" loc="850:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x7ff8d23c59d0" loc="755:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="__codecvt_noconv" ref="0x7ff8d282c900" loc="181:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x7ff8d238e9a0" loc="1053:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x7ff8d2389020" loc="1081:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x7ff8d23f04c0" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="CC2420_IOCFG1" ref="0x7ff8d230d700" loc="202:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MAIN_MOD_RESETn" ref="0x7ff8d2302250" loc="251:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="_ISxdigit" ref="0x7ff8d2861cb0" loc="52:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x7ff8d2384330" loc="1113:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x7ff8d2471b50" loc="27:/home/rodrigoct/tinyos-main-master/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x7ff8d2380950" loc="1141:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x7ff8d23c7390" loc="741:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x7ff8d236c020" loc="1262:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x7ff8d23dac40" loc="289:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_BATTMON_BATT_OK" ref="0x7ff8d22f1230" loc="342:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x7ff8d2468020" loc="104:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="CC2420_TIME_VREN" ref="0x7ff8d23173b0" loc="157:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SECCTRL1_SEC_RXL" ref="0x7ff8d22f2af0" loc="338:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x7ff8d23e53b0" loc="157:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x7ff8d23e28d0" loc="202:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x7ff8d2397020" loc="993:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x7ff8d23dec20" loc="255:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FP_NORMAL" ref="0x7ff8d286cbc0" loc="223:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="CC2420_MAIN_RESETn" ref="0x7ff8d23036c0" loc="248:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="_ISlower" ref="0x7ff8d2863220" loc="49:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x7ff8d23433e0" loc="128:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x7ff8d246aa90" loc="95:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x7ff8d23e1a80" loc="219:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x7ff8d23b3020" loc="809:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x7ff8d23b2940" loc="819:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x7ff8d2369920" loc="1284:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x7ff8d23b5330" loc="796:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MAIN_XOSC16M_BYPASS" ref="0x7ff8d2302a00" loc="253:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x7ff8d23f0bc0" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x7ff8d23c2980" loc="774:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x7ff8d29aeaa0" loc="55:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FP_SUBNORMAL" ref="0x7ff8d286c840" loc="220:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x7ff8d23a79a0" loc="890:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x7ff8d23ee1c0" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x7ff8d23ca980" loc="722:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x7ff8d2350e30" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x7ff8d2394620" loc="1014:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x7ff8d2391c60" loc="1035:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x7ff8d234bd20" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x7ff8d2675980" loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x7ff8d23db020" loc="277:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x7ff8d2394c20" loc="1016:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SYNCWORD_SYNCWORD" ref="0x7ff8d22fd950" loc="281:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x7ff8d2350a80" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x7ff8d236b330" loc="1268:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x7ff8d2368640" loc="1290:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x7ff8d234d7d0" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x7ff8d2390340" loc="1037:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x7ff8d23b2020" loc="816:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x7ff8d238b660" loc="1071:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RXCTRL1_MED_HGM" ref="0x7ff8d22f73e0" loc="310:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x7ff8d237a950" loc="1177:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x7ff8d2375020" loc="1205:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x7ff8d2371640" loc="1233:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="CC2420_MDMCTRL0" ref="0x7ff8d2310c00" loc="190:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x7ff8d23b6650" loc="792:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x7ff8d23a0020" loc="932:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_MIN_BACKOFF" ref="0x7ff8d2316370" loc="160:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x7ff8d2372c20" loc="1228:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x7ff8d236d320" loc="1256:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x7ff8d23e48c0" loc="173:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x7ff8d2398020" loc="986:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x7ff8d2369020" loc="1281:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x7ff8d23ea8a0" loc="135:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_STXONCCA" ref="0x7ff8d23124c0" loc="179:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_MDMCTRL0_CCA_MOD" ref="0x7ff8d23003f0" loc="261:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MDMCTRL0_PREAMBLE_LENGTH" ref="0x7ff8d22ff020" loc="264:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x7ff8d28b0460" loc="63:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x7ff8d23a4020" loc="904:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2147483648" name="CC2420_INVALID_TIMESTAMP" ref="0x7ff8d22e73a0" loc="403:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:167" name="SIM_LOG_OUTPUT_COUNT" ref="0x7ff8d27573d0" loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x7ff8d239b980" loc="970:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="CC2420_SFDMUX_XOSC16M_STABLE" ref="0x7ff8d22ebb10" loc="382:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x7ff8d246b7f0" loc="88:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x7ff8d239ac60" loc="978:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_RXCTRL1_RXBPF_LOCUR" ref="0x7ff8d22f8020" loc="305:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x7ff8d23b6330" loc="791:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x7ff8d2392020" loc="1024:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x7ff8d23e2c60" loc="207:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x7ff8d23b8680" loc="780:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x7ff8d236aca0" loc="1278:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x7ff8d2367660" loc="1297:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_FSCTRL_LOCK_LENGTH" ref="0x7ff8d22f57e0" loc="321:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="LEDS_LED6" ref="0x7ff8d1f99c40" loc="50:/home/rodrigoct/tinyos-main-master/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x7ff8d23cec80" loc="697:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x7ff8d23cd990" loc="703:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x7ff8d2934780" loc="59:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x7ff8d23ab640" loc="861:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x7ff8d23a4980" loc="909:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x7ff8d23e7a80" loc="144:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x7ff8d23a2c90" loc="922:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x7ff8d2382020" loc="1124:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x7ff8d237e680" loc="1152:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x7ff8d2386c40" loc="1104:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x7ff8d2383330" loc="1118:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x7ff8d23a8020" loc="880:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x7ff8d237f950" loc="1146:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x7ff8d23c4690" loc="761:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x7ff8d237a020" loc="1174:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x7ff8d2376660" loc="1202:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="_ISupper" ref="0x7ff8d28643d0" loc="48:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x7ff8d23c9ce0" loc="732:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x7ff8d236bcb0" loc="1273:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:288" name="CC2420_RAM_SABUF" ref="0x7ff8d2306020" loc="230:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="CC2420_ADCTST" ref="0x7ff8d2309020" loc="218:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="MAC_HEADER_SIZE" ref="0x7ff8d231a630" loc="146:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_MAIN_FS_RESETn" ref="0x7ff8d2302610" loc="252:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x7ff8d23d1c50" loc="678:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x7ff8d23a7340" loc="886:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_RXCTRL0_RXMIXBUF_CUR" ref="0x7ff8d22fa020" loc="295:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x7ff8d23cb020" loc="712:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x7ff8d234d490" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x7ff8d23a9340" loc="874:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x7ff8d239b020" loc="965:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x7ff8d23dd3a0" loc="261:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x7ff8d23ea1d0" loc="131:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x7ff8d2391340" loc="1032:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x7ff8d23d8cd0" loc="316:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_SECCTRL0_SEC_M" ref="0x7ff8d22f3be0" loc="332:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x7ff8d23af950" loc="838:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x7ff8d23a6980" loc="895:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x7ff8d239bcb0" loc="973:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x7ff8d2393c80" loc="1023:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x7ff8d23eda80" loc="96:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x7ff8d23cc660" loc="707:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:320" name="CC2420_RAM_TXNONCE" ref="0x7ff8d2306740" loc="232:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x7ff8d23b5020" loc="795:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x7ff8d23ac020" loc="854:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x7ff8d2378660" loc="1188:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x7ff8d2374ca0" loc="1216:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x7ff8d236f340" loc="1244:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x7ff8d23503c0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x7ff8d2394320" loc="1013:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FP_INFINITE" ref="0x7ff8d286c170" loc="214:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x7ff8d238bc70" loc="1073:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x7ff8d234f870" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:272" name="CC2420_RAM_RXNONCE" ref="0x7ff8d2307c00" loc="229:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x7ff8d26760b0" loc="54:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x7ff8d239a640" loc="976:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_SAES" ref="0x7ff8d2310530" loc="188:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x7ff8d2348020" loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x7ff8d23ebe00" loc="128:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x7ff8d234e1a0" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x7ff8d2674490" loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x7ff8d2370640" loc="1238:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_RXCTRL1_RXMIX_VCM" ref="0x7ff8d22f6020" loc="313:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x7ff8d23c76b0" loc="742:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="CC2420_FSMTC" ref="0x7ff8d230c1d0" loc="205:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x7ff8d238e360" loc="1051:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MANFIDH_VERSION" ref="0x7ff8d22ed580" loc="368:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x7ff8d23b8020" loc="776:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CBC_MAC_16" ref="0x7ff8d22e99f0" loc="393:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x7ff8d23b0960" loc="831:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x7ff8d238fc70" loc="1047:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x7ff8d2350770" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:62" name="CC2420_TXFIFO" ref="0x7ff8d2309a70" loc="221:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x7ff8d239e020" loc="946:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x7ff8d2381c20" loc="1135:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x7ff8d237c320" loc="1163:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x7ff8d2378980" loc="1191:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_RXCTRL0_MED_LNA_CURRENT" ref="0x7ff8d22f9480" loc="300:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x7ff8d2469230" loc="97:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="_ISdigit" ref="0x7ff8d2862e80" loc="51:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x7ff8d23aa020" loc="866:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x7ff8d23f1a10" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x7ff8d23b3330" loc="810:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x7ff8d2395340" loc="1006:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x7ff8d238d340" loc="1056:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x7ff8d23e68d0" loc="150:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SECCTRL0_SEC_MODE" ref="0x7ff8d22f2020" loc="333:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x7ff8d2396360" loc="1001:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_FSMTC_TC_SWITCH2TX" ref="0x7ff8d22ec450" loc="374:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_FSCTRL_CAL_RUNNING" ref="0x7ff8d22f5400" loc="320:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x7ff8d23c2020" loc="771:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x7ff8d23cfc60" loc="690:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x7ff8d2391020" loc="1031:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x7ff8d23e1e00" loc="222:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x7ff8d23a7020" loc="885:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x7ff8d29ae140" loc="52:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x7ff8d29ae770" loc="54:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x7ff8d23ca020" loc="719:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x7ff8d23c3640" loc="766:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x7ff8d23b1650" loc="823:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="CC2420_RXBPFTST" ref="0x7ff8d230a8d0" loc="216:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x7ff8d23dcc30" loc="274:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x7ff8d23a5020" loc="897:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x7ff8d2342730" loc="140:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x7ff8d238c020" loc="1062:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x7ff8d24715a0" loc="15:/home/rodrigoct/tinyos-main-master/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x7ff8d234a730" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_FSMTC_TC_TXEND2SWITCH" ref="0x7ff8d22ecc20" loc="376:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x7ff8d29ae450" loc="53:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_TXCTRL_PA_CURRENT" ref="0x7ff8d22fb0b0" loc="289:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x7ff8d2377c20" loc="1197:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x7ff8d23b4660" loc="804:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x7ff8d2372320" loc="1225:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x7ff8d236e940" loc="1253:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_ISalnum" ref="0x7ff8d285a130" loc="59:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_SIZE" ref="0x7ff8d2318880" loc="152:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x7ff8d23f0140" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x7ff8d238ecc0" loc="1054:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_FSMTC_TC_PAON2TX" ref="0x7ff8d22ec820" loc="375:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x7ff8d23eb710" loc="122:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x7ff8d23ac660" loc="856:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_RXCTRL1_MED_LOWGAIN" ref="0x7ff8d22f8bf0" loc="308:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x7ff8d2934e00" loc="61:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x7ff8d234a0b0" loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x7ff8d2348630" loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x7ff8d238a960" loc="1077:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x7ff8d23ec1d0" loc="102:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x7ff8d23ce350" loc="694:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x7ff8d23a3960" loc="914:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x7ff8d2383670" loc="1121:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="CC2420_AGCCTRL" ref="0x7ff8d230cc10" loc="208:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x7ff8d23dfa70" loc="244:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x7ff8d23e3e10" loc="191:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x7ff8d2386340" loc="1101:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x7ff8d23e3020" loc="179:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x7ff8d23ddaa0" loc="267:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="CC2420_FMSTATE" ref="0x7ff8d230ac40" loc="217:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x7ff8d23457d0" loc="111:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x7ff8d2384950" loc="1115:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x7ff8d237f020" loc="1143:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x7ff8d237b650" loc="1171:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="CC2420_STATUS_XOSC16M_STABLE" ref="0x7ff8d2314c00" loc="170:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CC2420_MANFIDH" ref="0x7ff8d230dde0" loc="204:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x7ff8d23c8cf0" loc="737:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x7ff8d236c640" loc="1264:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_SRXDEC" ref="0x7ff8d2311de0" loc="186:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x7ff8d23a1970" loc="928:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:362" name="CC2420_RAM_SHORTADR" ref="0x7ff8d23055d0" loc="236:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x7ff8d2470020" loc="28:/home/rodrigoct/tinyos-main-master/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_MDMCTRL0_ADR_DECODE" ref="0x7ff8d2301ac0" loc="259:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x7ff8d23aa9a0" loc="871:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_FSMTC_TC_RXCHAIN2RX" ref="0x7ff8d22ec070" loc="373:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x7ff8d23b0c80" loc="834:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="CC2420_RAM_KEY0" ref="0x7ff8d2307860" loc="228:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x7ff8d2395660" loc="1007:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x7ff8d238c980" loc="1065:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x7ff8d23ef020" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x7ff8d23d85b0" loc="310:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x7ff8d23efe00" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MDMCTRL1_RX_MODE" ref="0x7ff8d22fe7c0" loc="272:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x7ff8d2395980" loc="1010:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_TXCTRL_TX_TURNAROUND" ref="0x7ff8d22fc4a0" loc="286:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x7ff8d2351d20" loc="132:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x7ff8d2386020" loc="1098:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ITIMER_REAL" ref="0x7ff8d26800b0" loc="94:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_SRXON" ref="0x7ff8d2313d50" loc="177:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x7ff8d238f020" loc="1043:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x7ff8d23a6020" loc="892:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x7ff8d23c9020" loc="724:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_IOCFG1_SFDMUX" ref="0x7ff8d22ee020" loc="358:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x7ff8d23f2530" loc="30:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x7ff8d23ec8b0" loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LEDS_LED1" ref="0x7ff8d1f9a360" loc="45:/home/rodrigoct/tinyos-main-master/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x7ff8d23abc80" loc="865:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x7ff8d237d660" loc="1157:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x7ff8d23af330" loc="836:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x7ff8d2379ca0" loc="1185:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x7ff8d2398340" loc="987:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x7ff8d2374340" loc="1213:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x7ff8d2370980" loc="1241:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x7ff8d23d1610" loc="676:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x7ff8d23ef720" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RSSI_RSSI_VAL" ref="0x7ff8d22fd240" loc="277:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x7ff8d2368c60" loc="1292:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_STATUS_TX_ACTIVE" ref="0x7ff8d2315af0" loc="167:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x7ff8d23c6d10" loc="751:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x7ff8d2791880" loc="76:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x7ff8d2375640" loc="1207:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x7ff8d26751e0" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="P_PGID" ref="0x7ff8d2b03720" loc="54:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x7ff8d2371c60" loc="1235:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_SECCTRL0_SEC_SAKEYSEL" ref="0x7ff8d22f3020" loc="329:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x7ff8d23eba80" loc="125:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x7ff8d239f350" loc="942:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x7ff8d23e01e0" loc="223:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_IOCFG0_FIFO_POLARITY" ref="0x7ff8d22f0530" loc="349:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x7ff8d23b5cb0" loc="801:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_IOCFG0_FIFOP_THR" ref="0x7ff8d22ef510" loc="353:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="_ISspace" ref="0x7ff8d2860b30" loc="53:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x7ff8d23c66b0" loc="747:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_SECCTRL0_RXFIFO_PROTECTION" ref="0x7ff8d22f4780" loc="327:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x7ff8d2392640" loc="1026:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_MDMCTRL0_CCA_HYST" ref="0x7ff8d2300020" loc="260:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x7ff8d23a4640" loc="906:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="CC2420_TXCTRL" ref="0x7ff8d230fa60" loc="194:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x7ff8d2398980" loc="989:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x7ff8d2387640" loc="1095:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x7ff8d2423750" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NUM_TASKS" ref="0x7ff8d2423420" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="stopDoneTask" ref="0x7ff8d215d160" loc="101:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="sendDoneTask" ref="0x7ff8d21d7020" loc="145:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="startDoneTask" ref="0x7ff8d215c1a0" loc="96:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="read_rssi_task" ref="0x7ff8d215ac30" loc="528:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="UART_QUEUE_LEN" ref="0x7ff8d1f9b020" loc="84:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="uartSendTask" ref="0x7ff8d1f43b70" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="radioSendTask" ref="0x7ff8d1f44920" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="RADIO_QUEUE_LEN" ref="0x7ff8d1f9b3a0" loc="85:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="startDone" ref="0x7ff8d1d319e0" loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="stopDone" ref="0x7ff8d1d8c8b0" loc="68:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="intptr_t" ref="0x7ff8d33e0d10" loc="119:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intptr_t" ref="0x7ff8d33e0d10"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x7ff8d2462090" loc="134:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x7ff8d2463640"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x7ff8d2462090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_spinlock_t" ref="0x7ff8d2a934d0" loc="234:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-qualified volatile="">
          <typename><typedef-ref name="pthread_spinlock_t" ref="0x7ff8d2a934d0"/></typename>
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </typedef>
    <typedef name="wchar_t" ref="0x7ff8d347ee20" loc="324:/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x7ff8d347ee20"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x7ff8d2347e80" loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8d23479b0"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x7ff8d2347e80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0x7ff8d2aba830" loc="151:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0x7ff8d2aba830"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x7ff8d246e6a0" loc="22:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x7ff8d246e080"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x7ff8d246e6a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int64_t" ref="0x7ff8d2afd900" loc="43:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x7ff8d2afd900"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x7ff8d2afe8f0" loc="38:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x7ff8d2afe8f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x7ff8d24632e0" loc="129:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x7ff8d2464190"/>
        <typename><typedef-ref name="serial_header_t" ref="0x7ff8d24632e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="cc2420_metadata_t" ref="0x7ff8d231ddb0" loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Packet metadata.</short>
        <long>&#10; CC2420 Packet metadata. Contains extra information about the message&#10; that will not be transmitted.&#10;&#10; Note that the first two bytes automatically take in the values of the&#10; FCS when the payload is full. Do not modify the first two bytes of metadata.&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7ff8d231f510"/>
        <typename><typedef-ref name="cc2420_metadata_t" ref="0x7ff8d231ddb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__u_char" ref="0x7ff8d2b00170" loc="30:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__u_char" ref="0x7ff8d2b00170"/></typename>
      </type-int>
    </typedef>
    <typedef name="__intptr_t" ref="0x7ff8d2aeeda0" loc="186:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__intptr_t" ref="0x7ff8d2aeeda0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__qaddr_t" ref="0x7ff8d2aee5f0" loc="182:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__quad_t" ref="0x7ff8d2afc130"/></typename>
        </type-int>
        <typename><typedef-ref name="__qaddr_t" ref="0x7ff8d2aee5f0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="fd_set" ref="0x7ff8d2ab2c60" loc="75:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x7ff8d2ab28f0"/>
        <typename><typedef-ref name="fd_set" ref="0x7ff8d2ab2c60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x7ff8d278f1c0" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x7ff8d278f1c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__caddr_t" ref="0x7ff8d2aee9b0" loc="183:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__caddr_t" ref="0x7ff8d2aee9b0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__time_t" ref="0x7ff8d2af5960" loc="139:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__time_t" ref="0x7ff8d2af5960"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ssize_t" ref="0x7ff8d2aef500" loc="172:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ssize_t" ref="0x7ff8d2aef500"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x7ff8d2a17b30" loc="28:/usr/include/x86_64-linux-gnu/bits/mathdef.h">
      <type-float cname="float" size="I:4" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x7ff8d2a17b30"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x7ff8d2ac0790" loc="70:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="mode_t" ref="0x7ff8d2ac0790"/></typename>
      </type-int>
    </typedef>
    <typedef name="_IO_lock_t" ref="0x7ff8d282fbc0" loc="150:/usr/include/libio.h">
      <type-void size="I:1" alignment="I:1">
        <typename><typedef-ref name="_IO_lock_t" ref="0x7ff8d282fbc0"/></typename>
      </type-void>
    </typedef>
    <typedef name="int_least32_t" ref="0x7ff8d33e4160" loc="67:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x7ff8d33e4160"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x7ff8d3486690"  loc="NONE">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x7ff8d3486530"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x7ff8d2afd500" loc="41:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x7ff8d2afd500"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsword_t" ref="0x7ff8d2aef140" loc="170:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsword_t" ref="0x7ff8d2aef140"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt_t" ref="0x7ff8d2af1900" loc="166:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt_t" ref="0x7ff8d2af1900"/></typename>
      </type-int>
    </typedef>
    <typedef name="nlink_t" ref="0x7ff8d2ac0b60" loc="75:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="nlink_t" ref="0x7ff8d2ac0b60"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x7ff8d2abb020" loc="59:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="clock_t" ref="0x7ff8d2abb020"/></typename>
      </type-int>
    </typedef>
    <typedef name="security_header_t" ref="0x7ff8d2322ca0" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Security Header&#10;</short>
      </documentation>
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="security_header_t" ref="0x7ff8d2323760"/>
        <typename><typedef-ref name="security_header_t" ref="0x7ff8d2322ca0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="cc2420_status_t" ref="0x7ff8d2323260" loc="4:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="cc2420_status_t" ref="0x7ff8d2323260"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0x7ff8d2a9a4a0" loc="160:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x7ff8d2a9a080"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0x7ff8d2a9a4a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pthread_list_t" ref="0x7ff8d2aa4d90" loc="79:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x7ff8d2aa4280"/>
        <typename><typedef-ref name="__pthread_list_t" ref="0x7ff8d2aa4d90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="heap_t" ref="0x7ff8d26f2620" loc="65:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/heap.h">
      <documentation loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x7ff8d26f3be0"/>
        <typename><typedef-ref name="heap_t" ref="0x7ff8d26f2620"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gid_t" ref="0x7ff8d2af91e0" loc="126:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gid_t" ref="0x7ff8d2af91e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x7ff8d2b541f0" loc="446:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x7ff8d2b541f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x7ff8d27587c0" loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_log.c">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="sim_log_channel" ref="0x7ff8d27599c0"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x7ff8d27587c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0x7ff8d2ac34d0" loc="35:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0x7ff8d2ac34d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0x7ff8d2a9ac80" loc="168:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_once_t" ref="0x7ff8d2a9ac80"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint" ref="0x7ff8d2ababc0" loc="152:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0x7ff8d2ababc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0x7ff8d2473bd0" loc="11:/home/rodrigoct/tinyos-main-master/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x7ff8d2473bd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least8_t" ref="0x7ff8d33e4960" loc="76:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x7ff8d33e4960"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsid_t" ref="0x7ff8d2af7600" loc="134:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7ff8d2af7290"/>
        <typename><typedef-ref name="__fsid_t" ref="0x7ff8d2af7600"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x7ff8d33e0500" loc="106:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast32_t" ref="0x7ff8d33e0500"/></typename>
      </type-int>
    </typedef>
    <typedef name="blksize_t" ref="0x7ff8d2aa8d90" loc="228:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blksize_t" ref="0x7ff8d2aa8d90"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x7ff8d33e4550" loc="69:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x7ff8d33e4550"/></typename>
      </type-int>
    </typedef>
    <typedef name="__pid_t" ref="0x7ff8d2af8c90" loc="133:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__pid_t" ref="0x7ff8d2af8c90"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_int" ref="0x7ff8d2b00920" loc="32:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_int" ref="0x7ff8d2b00920"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x7ff8d2783410" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7ff8d2783020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x7ff8d2783410"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x7ff8d2830670" loc="67:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x7ff8d2830670"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sig_atomic_t" ref="0x7ff8d2ab7db0" loc="22:/usr/include/x86_64-linux-gnu/bits/sigset.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__sig_atomic_t" ref="0x7ff8d2ab7db0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__daddr_t" ref="0x7ff8d2af44e0" loc="143:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__daddr_t" ref="0x7ff8d2af44e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino_t" ref="0x7ff8d2af95d0" loc="127:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino_t" ref="0x7ff8d2af95d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x7ff8d33e5950" loc="65:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x7ff8d33e5950"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_packet_t" ref="0x7ff8d231cd00" loc="114:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_packet_t" ref="0x7ff8d231c300"/>
        <typename><typedef-ref name="cc2420_packet_t" ref="0x7ff8d231cd00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="FILE" ref="0x7ff8d2836be0" loc="48:/usr/include/stdio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7ff8d28367f0"/>
        <typename><typedef-ref name="FILE" ref="0x7ff8d2836be0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__compar_fn_t" ref="0x7ff8d2a4add0" loc="741:/usr/include/stdlib.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="__compar_fn_t" ref="0x7ff8d2a4add0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__locale_t" ref="0x7ff8d2b37020" loc="39:/usr/include/xlocale.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:232" alignment="I:8"><struct-ref name="__locale_struct" ref="0x7ff8d2b3a5f0"/></type-tag>
        <typename><typedef-ref name="__locale_t" ref="0x7ff8d2b37020"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x7ff8d233f4d0" loc="161:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x7ff8d233f4d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mode_t" ref="0x7ff8d2af9d90" loc="129:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__mode_t" ref="0x7ff8d2af9d90"/></typename>
      </type-int>
    </typedef>
    <typedef name="locale_t" ref="0x7ff8d2b37430" loc="42:/usr/include/xlocale.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:232" alignment="I:8"><struct-ref name="__locale_struct" ref="0x7ff8d2b3a5f0"/></type-tag>
        <typename><typedef-ref name="locale_t" ref="0x7ff8d2b37430"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="radio_stats_t" ref="0x7ff8d2466e00" loc="121:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x7ff8d2468b50"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x7ff8d2466e00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0x7ff8d2abb930" loc="91:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clockid_t" ref="0x7ff8d2abb930"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0x7ff8d2ac03d0" loc="65:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x7ff8d2ac03d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsid_t" ref="0x7ff8d2ac2450" loc="39:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7ff8d2af7290"/>
        <typename><typedef-ref name="fsid_t" ref="0x7ff8d2ac2450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_packet_t" ref="0x7ff8d2485910" loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x7ff8d24855d0"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x7ff8d2485910"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x7ff8d2340c70" loc="158:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8d2340590"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7ff8d2340c70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x7ff8d3471950" loc="36:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x7ff8d3471950"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x7ff8d2759650" loc="54:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x7ff8d275ad90"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x7ff8d2759650"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x7ff8d2ab4890" loc="48:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="suseconds_t" ref="0x7ff8d2ab4890"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x7ff8d2ab5090" loc="37:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x7ff8d2ab68b0"/>
        <typename><typedef-ref name="sigset_t" ref="0x7ff8d2ab5090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_short" ref="0x7ff8d2ac3120" loc="34:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0x7ff8d2ac3120"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0x7ff8d246fca0" loc="18:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimRadioMsg.h">
      <documentation loc="14:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimRadioMsg.h">
        <short> I-Frame 6LowPAN interoperability byte *</short>
      </documentation>
      <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x7ff8d24703c0"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x7ff8d246fca0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x7ff8d347e5f0" loc="147:/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ptrdiff_t" ref="0x7ff8d347e5f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="blkcnt_t" ref="0x7ff8d2aa71e0" loc="235:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blkcnt_t" ref="0x7ff8d2aa71e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x7ff8d33e5130" loc="51:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7ff8d33e5130"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x7ff8d2b520d0" loc="448:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x7ff8d2b520d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x7ff8d2b5a020" loc="435:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x7ff8d2b5a020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x7ff8d33de130" loc="122:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintptr_t" ref="0x7ff8d33de130"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0x7ff8d2abe7c0" loc="116:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0x7ff8d2abe7c0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__u_long" ref="0x7ff8d2b00d20" loc="33:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_long" ref="0x7ff8d2b00d20"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x7ff8d33e0930" loc="107:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x7ff8d33e0930"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0x7ff8d2afed00" loc="39:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x7ff8d2afed00"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0x7ff8d2ac4cf0" loc="33:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0x7ff8d2ac4cf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x7ff8d2355b00" loc="120:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x7ff8d2355b00"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x7ff8d33e1090" loc="92:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast16_t" ref="0x7ff8d33e1090"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x7ff8d2806020" loc="110:/usr/include/stdio.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7ff8d2833eb0"/>
        <typename><typedef-ref name="fpos_t" ref="0x7ff8d2806020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x7ff8d2add440" loc="101:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7ff8d2add020"/>
        <typename><typedef-ref name="div_t" ref="0x7ff8d2add440"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x7ff8d25e7230" loc="6:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x7ff8d25e89a0"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x7ff8d25e7230"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x7ff8d347ea30" loc="212:/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="size_t" ref="0x7ff8d347ea30"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x7ff8d2afe4f0" loc="37:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x7ff8d2afe4f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sigset_t" ref="0x7ff8d2ab6c20" loc="30:/usr/include/x86_64-linux-gnu/bits/sigset.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x7ff8d2ab68b0"/>
        <typename><typedef-ref name="__sigset_t" ref="0x7ff8d2ab6c20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__loff_t" ref="0x7ff8d2aee1d0" loc="181:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__loff_t" ref="0x7ff8d2aee1d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino64_t" ref="0x7ff8d2af99d0" loc="128:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino64_t" ref="0x7ff8d2af99d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x7ff8d24749d0" loc="6:/home/rodrigoct/tinyos-main-master/tos/types/AM.h">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x7ff8d24749d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x7ff8d24616e0" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/platform_message.h">
      <type-tag size="I:11" alignment="I:1"><union-ref name="message_header" ref="0x7ff8d2462d70"/>
        <typename><typedef-ref name="message_header_t" ref="0x7ff8d24616e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x7ff8d25f2020" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x7ff8d25f4510"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x7ff8d25f2020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x7ff8d2471020" loc="12:/home/rodrigoct/tinyos-main-master/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x7ff8d2471020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x7ff8d2b5b120" loc="433:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x7ff8d2b5b120"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x7ff8d233f0d0" loc="160:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x7ff8d233f0d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x7ff8d33e2020" loc="77:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x7ff8d33e2020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_close_fn" ref="0x7ff8d281dc60" loc="353:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
        <typename><typedef-ref name="__io_close_fn" ref="0x7ff8d281dc60"/></typename>
      </type-function>
    </typedef>
    <typedef name="uint8_t" ref="0x7ff8d33e6920" loc="48:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7ff8d33e6920"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0x7ff8d2abb4a0" loc="75:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="time_t" ref="0x7ff8d2abb4a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x7ff8d2b58cd0" loc="441:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x7ff8d2b58cd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x7ff8d2adcb90" loc="121:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7ff8d2adc770"/>
        <typename><typedef-ref name="lldiv_t" ref="0x7ff8d2adcb90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_FILE" ref="0x7ff8d2824c60" loc="310:/usr/include/libio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7ff8d28367f0"/>
        <typename><typedef-ref name="_IO_FILE" ref="0x7ff8d2824c60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x7ff8d2aa5e70" loc="69:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:56" alignment="I:8"><union-ref name="pthread_attr_t" ref="0x7ff8d2aa5360"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x7ff8d2aa5e70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_seek_fn" ref="0x7ff8d281d2c0" loc="350:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="__off64_t" ref="0x7ff8d2af8920"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_seek_fn" ref="0x7ff8d281d2c0"/></typename>
      </type-function>
    </typedef>
    <typedef name="pid_t" ref="0x7ff8d2abf780" loc="98:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x7ff8d2abf780"/></typename>
      </type-int>
    </typedef>
    <typedef name="timer_t" ref="0x7ff8d2abbd60" loc="103:/usr/include/time.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="timer_t" ref="0x7ff8d2abbd60"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0x7ff8d2a93090" loc="228:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:8" alignment="I:8"><union-ref ref="0x7ff8d2a95830"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0x7ff8d2a93090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uint64_t" ref="0x7ff8d2afdd10" loc="44:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x7ff8d2afdd10"/></typename>
      </type-int>
    </typedef>
    <typedef name="__dev_t" ref="0x7ff8d2afca30" loc="124:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__dev_t" ref="0x7ff8d2afca30"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x7ff8d2b57bc0" loc="443:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x7ff8d2b57bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="va_list" ref="0x7ff8d2807b60" loc="79:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x7ff8d3486530"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x7ff8d2807b60"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__off_t" ref="0x7ff8d2af8560" loc="131:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off_t" ref="0x7ff8d2af8560"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast8_t" ref="0x7ff8d33e2c50" loc="90:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x7ff8d33e2c50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt_t" ref="0x7ff8d2af3820" loc="158:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt_t" ref="0x7ff8d2af3820"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x7ff8d246cd80" loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x7ff8d246ea10"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x7ff8d246cd80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__syscall_ulong_t" ref="0x7ff8d2aefda0" loc="177:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__syscall_ulong_t" ref="0x7ff8d2aefda0"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_id_t" ref="0x7ff8d24737f0" loc="10:/home/rodrigoct/tinyos-main-master/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x7ff8d24737f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x7ff8d33de510" loc="134:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x7ff8d33de510"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x7ff8d2462a10" loc="138:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x7ff8d2462400"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x7ff8d2462a10"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt_t" ref="0x7ff8d2af1090" loc="162:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt_t" ref="0x7ff8d2af1090"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint16_t" ref="0x7ff8d33e6d20" loc="49:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7ff8d33e6d20"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos_t" ref="0x7ff8d28322f0" loc="25:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7ff8d2833eb0"/>
        <typename><typedef-ref name="_G_fpos_t" ref="0x7ff8d28322f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int8_t" ref="0x7ff8d2ab91b0" loc="200:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x7ff8d2ab91b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x7ff8d2473020" loc="7:/home/rodrigoct/tinyos-main-master/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x7ff8d2473020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timer_t" ref="0x7ff8d2af3020" loc="150:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="__timer_t" ref="0x7ff8d2af3020"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="message_metadata_t" ref="0x7ff8d245fad0" loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_metadata" ref="0x7ff8d245f450"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x7ff8d245fad0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_write_fn" ref="0x7ff8d281e130" loc="341:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__ssize_t" ref="0x7ff8d2aef500"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x7ff8d347ea30"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_write_fn" ref="0x7ff8d281e130"/></typename>
      </type-function>
    </typedef>
    <typedef name="fd_mask" ref="0x7ff8d2ab10d0" loc="82:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fd_mask" ref="0x7ff8d2ab10d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x7ff8d2b5ae60" loc="437:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x7ff8d2b5ae60"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x7ff8d2764470" loc="10:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/hashtable.h">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x7ff8d2764080"/>
        <typename><typedef-ref name="hashtable_t" ref="0x7ff8d2764470"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x7ff8d2ac0020" loc="60:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="dev_t" ref="0x7ff8d2ac0020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_quad_t" ref="0x7ff8d2afc540" loc="53:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_quad_t" ref="0x7ff8d2afc540"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x7ff8d2ab9cb0" loc="202:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x7ff8d2ab9cb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0x7ff8d2aa7a00" loc="243:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fsfilcnt_t" ref="0x7ff8d2aa7a00"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x7ff8d33e1c50" loc="103:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x7ff8d33e1c50"/></typename>
      </type-int>
    </typedef>
    <typedef name="idtype_t" ref="0x7ff8d2b03a40" loc="55:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x7ff8d2b03020"/>
        <typename><typedef-ref name="idtype_t" ref="0x7ff8d2b03a40"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__rlim64_t" ref="0x7ff8d2af5200" loc="137:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim64_t" ref="0x7ff8d2af5200"/></typename>
      </type-int>
    </typedef>
    <typedef name="snr_lqi_t" ref="0x7ff8d2157020" loc="13:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="snr_lqi" ref="0x7ff8d2158570"/>
        <typename><typedef-ref name="snr_lqi_t" ref="0x7ff8d2157020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__key_t" ref="0x7ff8d2af4850" loc="144:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__key_t" ref="0x7ff8d2af4850"/></typename>
      </type-int>
    </typedef>
    <typedef name="__useconds_t" ref="0x7ff8d2af5d40" loc="140:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__useconds_t" ref="0x7ff8d2af5d40"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_read_fn" ref="0x7ff8d281f020" loc="333:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__ssize_t" ref="0x7ff8d2aef500"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x7ff8d347ea30"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_read_fn" ref="0x7ff8d281f020"/></typename>
      </type-function>
    </typedef>
    <typedef name="nx_int16_t" ref="0x7ff8d2b5d9e0" loc="432:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x7ff8d2b5d9e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__gwchar_t" ref="0x7ff8d33dc020" loc="34:/usr/include/inttypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gwchar_t" ref="0x7ff8d33dc020"/></typename>
      </type-int>
    </typedef>
    <typedef name="register_t" ref="0x7ff8d2ab7800" loc="205:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="register_t" ref="0x7ff8d2ab7800"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_header_t" ref="0x7ff8d23209e0" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
        <short> I-Frame 6LowPAN interoperability byte *</short>
      </documentation>
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7ff8d2321080"/>
        <typename><typedef-ref name="cc2420_header_t" ref="0x7ff8d23209e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_barrierattr_t" ref="0x7ff8d2a92d80" loc="249:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x7ff8d2a92960"/>
        <typename><typedef-ref name="pthread_barrierattr_t" ref="0x7ff8d2a92d80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x7ff8d2abe020" loc="109:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ssize_t" ref="0x7ff8d2abe020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__quad_t" ref="0x7ff8d2afc130" loc="52:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__quad_t" ref="0x7ff8d2afc130"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x7ff8d33e61a0" loc="38:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x7ff8d33e61a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint64_t" ref="0x7ff8d33e5530" loc="55:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x7ff8d33e5530"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_long" ref="0x7ff8d2ac3890" loc="36:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_long" ref="0x7ff8d2ac3890"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x7ff8d2360b00" loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x7ff8d2360b00"/></typename>
      </type-int>
    </typedef>
    <typedef name="_LIB_VERSION_TYPE" ref="0x7ff8d286a280" loc="354:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x7ff8d286b020"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x7ff8d286a280"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x7ff8d2b55320" loc="444:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x7ff8d2b55320"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x7ff8d2b57490" loc="442:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x7ff8d2b57490"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0x7ff8d2aa5020" loc="60:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="pthread_t" ref="0x7ff8d2aa5020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blksize_t" ref="0x7ff8d2af3410" loc="153:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blksize_t" ref="0x7ff8d2af3410"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x7ff8d33dcd00" loc="275:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7ff8d33dc8e0"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x7ff8d33dcd00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nlink_t" ref="0x7ff8d2af81b0" loc="130:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__nlink_t" ref="0x7ff8d2af81b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__id_t" ref="0x7ff8d2af55a0" loc="138:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__id_t" ref="0x7ff8d2af55a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least32_t" ref="0x7ff8d33e2410" loc="78:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x7ff8d33e2410"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mbstate_t" ref="0x7ff8d2833770" loc="94:/usr/include/wchar.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7ff8d2833350"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x7ff8d2833770"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x7ff8d245f0d0" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x7ff8d2461a40"/>
        <typename><typedef-ref name="message_footer_t" ref="0x7ff8d245f0d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__WAIT_STATUS" ref="0x7ff8d2ae4910" loc="71:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:8"><union-ref ref="0x7ff8d2ae4390"/>
        <typename><typedef-ref name="__WAIT_STATUS" ref="0x7ff8d2ae4910"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__blkcnt64_t" ref="0x7ff8d2af3c00" loc="159:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt64_t" ref="0x7ff8d2af3c00"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0x7ff8d2aa75f0" loc="239:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fsblkcnt_t" ref="0x7ff8d2aa75f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0x7ff8d2abf3d0" loc="86:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="off_t" ref="0x7ff8d2abf3d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_short" ref="0x7ff8d2b00570" loc="31:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__u_short" ref="0x7ff8d2b00570"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x7ff8d2b5b830" loc="434:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x7ff8d2b5b830"/></typename>
      </type-int>
    </typedef>
    <typedef name="quad_t" ref="0x7ff8d2ac3c50" loc="37:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0x7ff8d2ac3c50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__suseconds_t" ref="0x7ff8d2af4160" loc="141:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__suseconds_t" ref="0x7ff8d2af4160"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrier_t" ref="0x7ff8d2a92180" loc="243:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:32" alignment="I:8"><union-ref ref="0x7ff8d2a93ce0"/>
        <typename><typedef-ref name="pthread_barrier_t" ref="0x7ff8d2a92180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0x7ff8d2afe130" loc="36:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x7ff8d2afe130"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos64_t" ref="0x7ff8d2832e30" loc="30:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7ff8d2832a10"/>
        <typename><typedef-ref name="_G_fpos64_t" ref="0x7ff8d2832e30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__clockid_t" ref="0x7ff8d2af4c00" loc="147:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clockid_t" ref="0x7ff8d2af4c00"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x7ff8d33e00d0" loc="105:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast16_t" ref="0x7ff8d33e00d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_footer_t" ref="0x7ff8d231f150" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Packet Footer&#10;</short>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><nx_struct-ref name="cc2420_footer_t" ref="0x7ff8d2320da0"/>
        <typename><typedef-ref name="cc2420_footer_t" ref="0x7ff8d231f150"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uintmax_t" ref="0x7ff8d33de910" loc="135:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x7ff8d33de910"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x7ff8d2473430" loc="8:/home/rodrigoct/tinyos-main-master/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x7ff8d2473430"/></typename>
      </type-int>
    </typedef>
    <typedef name="__clock_t" ref="0x7ff8d2af79c0" loc="135:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__clock_t" ref="0x7ff8d2af79c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x7ff8d2b5a740" loc="436:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x7ff8d2b5a740"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim_t" ref="0x7ff8d2af7dc0" loc="136:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim_t" ref="0x7ff8d2af7dc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0x7ff8d2ac2090" loc="38:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0x7ff8d2ac2090"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x7ff8d33e1470" loc="93:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast32_t" ref="0x7ff8d33e1470"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x7ff8d33e5d40" loc="66:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x7ff8d33e5d40"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x7ff8d2adc020" loc="109:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7ff8d2addac0"/>
        <typename><typedef-ref name="ldiv_t" ref="0x7ff8d2adc020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x7ff8d2ab7290" loc="203:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x7ff8d2ab7290"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0x7ff8d2ab9730" loc="201:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x7ff8d2ab9730"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least64_t" ref="0x7ff8d33e2840" loc="80:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x7ff8d33e2840"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x7ff8d2afd130" loc="40:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x7ff8d2afd130"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0x7ff8d2a95020" loc="222:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:56" alignment="I:8"><union-ref ref="0x7ff8d2a96a10"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0x7ff8d2a95020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x7ff8d2a15020" loc="29:/usr/include/x86_64-linux-gnu/bits/mathdef.h">
      <type-float cname="double" size="I:8" alignment="I:8">
        <typename><typedef-ref name="double_t" ref="0x7ff8d2a15020"/></typename>
      </type-float>
    </typedef>
    <typedef name="lqi_dist_t" ref="0x7ff8d2158180" loc="7:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_lqi.h">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7ff8d215b930"/>
        <typename><typedef-ref name="lqi_dist_t" ref="0x7ff8d2158180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fd_mask" ref="0x7ff8d2ab4c70" loc="54:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fd_mask" ref="0x7ff8d2ab4c70"/></typename>
      </type-int>
    </typedef>
    <typedef name="bool" ref="0x7ff8d2791020" loc="65:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7ff8d2791020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsblkcnt64_t" ref="0x7ff8d2af14c0" loc="163:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt64_t" ref="0x7ff8d2af14c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x7ff8d2673c90" loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:488" alignment="I:8"><struct-ref name="sim_noise_hash_t" ref="0x7ff8d2674830"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x7ff8d2673c90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__FILE" ref="0x7ff8d2834090" loc="64:/usr/include/stdio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7ff8d28367f0"/>
        <typename><typedef-ref name="__FILE" ref="0x7ff8d2834090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x7ff8d282f3d0" loc="40:/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x7ff8d3486530"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x7ff8d282f3d0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x7ff8d2b55a50" loc="445:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x7ff8d2b55a50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__off64_t" ref="0x7ff8d2af8920" loc="132:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off64_t" ref="0x7ff8d2af8920"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt64_t" ref="0x7ff8d2af1d30" loc="167:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt64_t" ref="0x7ff8d2af1d30"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x7ff8d33e6550" loc="40:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x7ff8d33e6550"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x7ff8d3471e00" loc="37:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x7ff8d3471e00"/></typename>
      </type-int>
    </typedef>
    <typedef name="ulong" ref="0x7ff8d2aba450" loc="150:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ulong" ref="0x7ff8d2aba450"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x7ff8d33e1850" loc="94:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x7ff8d33e1850"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x7ff8d2abf020" loc="80:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x7ff8d2abf020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__syscall_slong_t" ref="0x7ff8d2aef930" loc="175:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__syscall_slong_t" ref="0x7ff8d2aef930"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x7ff8d245d450" loc="19:/home/rodrigoct/tinyos-main-master/tos/types/message.h">
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8d245fe00"/>
        <typename><typedef-ref name="message_t" ref="0x7ff8d245d450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x7ff8d2b585b0" loc="438:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x7ff8d2b585b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="loff_t" ref="0x7ff8d2ac2810" loc="44:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="loff_t" ref="0x7ff8d2ac2810"/></typename>
      </type-int>
    </typedef>
    <typedef name="__socklen_t" ref="0x7ff8d2aec1c0" loc="189:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__socklen_t" ref="0x7ff8d2aec1c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="node_t" ref="0x7ff8d26ea590" loc="65:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/heap.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="node" ref="0x7ff8d26ebd40"/>
        <typename><typedef-ref name="node_t" ref="0x7ff8d26ea590"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uid_t" ref="0x7ff8d2afcde0" loc="125:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uid_t" ref="0x7ff8d2afcde0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int8_t" ref="0x7ff8d2b5d2d0" loc="431:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x7ff8d2b5d2d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x7ff8d266d2e0" loc="84:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:264" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x7ff8d2671170"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x7ff8d266d2e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x7ff8d2abfb10" loc="104:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x7ff8d2abfb10"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0x7ff8d2aa0360" loc="128:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:40" alignment="I:8"><union-ref ref="0x7ff8d2aa2e50"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0x7ff8d2aa0360"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__itimer_which_t" ref="0x7ff8d267f600" loc="120:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__itimer_which_t" ref="0x7ff8d267f600"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_cond_t" ref="0x7ff8d2a9b890" loc="154:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:48" alignment="I:8"><union-ref ref="0x7ff8d2a9b3c0"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0x7ff8d2a9b890"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_key_t" ref="0x7ff8d2a9a8b0" loc="164:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_key_t" ref="0x7ff8d2a9a8b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0x7ff8d2ac2bc0" loc="48:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ino_t" ref="0x7ff8d2ac2bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0x7ff8d2abe3f0" loc="115:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0x7ff8d2abe3f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timezone_ptr_t" ref="0x7ff8d2685540" loc="61:/usr/include/x86_64-linux-gnu/sys/time.h">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-qualified __restrict="">
          <typename><typedef-ref name="__timezone_ptr_t" ref="0x7ff8d2685540"/></typename>
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="timezone" ref="0x7ff8d26879d0"/></type-tag>
        </type-pointer>
      </type-qualified>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x7ff8d2b54950" loc="447:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x7ff8d2b54950"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0x7ff8d2abeb70" loc="122:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0x7ff8d2abeb70"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0x7ff8d2a9e020" loc="134:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x7ff8d2aa0b20"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0x7ff8d2a9e020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0x7ff8d246b200" loc="83:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x7ff8d246b200"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0x7ff8d215c940" loc="96:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0x7ff8d215d700" loc="101:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0x7ff8d21d75c0" loc="145:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x7ff8d20a5d80" loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:72" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x7ff8d20a5910"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x7ff8d20a5d80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_read_rssi_task" ref="0x7ff8d2159250" loc="528:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_radioSendTask" ref="0x7ff8d1f43020" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-array elements="I:5" size="I:20" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_uartSendTask" ref="0x7ff8d1f42150" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-array elements="I:4" size="I:16" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDone" ref="0x7ff8d1d8ce50" loc="68:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-array elements="I:7" size="I:28" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_startDone" ref="0x7ff8d1d30020" loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/tossim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-array elements="I:6" size="I:24" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
